# Generated by Django 2.1 on 2021-09-02 12:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sessions', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Model_ActionSousModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_ActionUtilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_action', models.CharField(blank=True, max_length=50, null=True)),
                ('ref_action', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('description', models.TextField()),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Activite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=2, null=True)),
                ('designation', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Alarme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('temps', models.IntegerField(default=1)),
                ('type_alarme', models.IntegerField(choices=[(1, 'Notification'), (2, 'Email'), (3, 'Notification et Email')], default=1)),
                ('type_intervalle', models.IntegerField(choices=[(1, 'Munites'), (2, 'Heures'), (3, 'Jours')], default=1)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Analyse_indice_princsuivi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_entree', models.IntegerField(blank=True, default=0, null=True)),
                ('nombre_sortie', models.IntegerField(blank=True, default=0, null=True)),
                ('massa_salariale_eff', models.IntegerField(blank=True, default=0, null=True)),
                ('masse_salariale_bud', models.IntegerField(blank=True, default=0, null=True)),
                ('salairesentre_diff_catehorie', models.IntegerField(blank=True, default=0, null=True)),
                ('prime_remuneration', models.IntegerField(blank=True, default=0, null=True)),
                ('heure_supplementaire', models.IntegerField(blank=True, default=0, null=True)),
                ('salaire_median_collectivite', models.IntegerField(blank=True, default=0, null=True)),
                ('accident_travail_arret', models.IntegerField(blank=True, default=0, null=True)),
                ('nombre_heure_travail', models.IntegerField(blank=True, default=0, null=True)),
                ('nombre_jour_arret', models.IntegerField(blank=True, default=0, null=True)),
                ('nbre_jr_absence', models.IntegerField(blank=True, default=0, null=True)),
                ('arret_maladie_moins_jour', models.IntegerField(blank=True, default=0, null=True)),
                ('arret_maladie', models.IntegerField(blank=True, default=0, null=True)),
                ('montant_formation', models.IntegerField(blank=True, default=0, null=True)),
                ('masse_sal', models.IntegerField(blank=True, default=0, null=True)),
                ('nbr_jour_formation_D', models.IntegerField(blank=True, default=0, null=True)),
                ('nbr_agent_occupe_D', models.IntegerField(blank=True, default=0, null=True)),
                ('frais_personnel', models.IntegerField(blank=True, default=0, null=True)),
                ('Budget_fonct', models.IntegerField(blank=True, default=0, null=True)),
                ('txformationMetier', models.IntegerField(blank=True, default=0, null=True)),
                ('txabsentiemal', models.IntegerField(blank=True, default=0, null=True)),
                ('annee', models.IntegerField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Analyse_Personnel_Mouve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('masse_salariale', models.IntegerField(blank=True, default=0, null=True)),
                ('prorogation_stage', models.IntegerField(blank=True, default=0, null=True)),
                ('total_mise_stage', models.IntegerField(blank=True, default=0, null=True)),
                ('depart_definitif', models.IntegerField(blank=True, default=0)),
                ('depart_provision', models.IntegerField(blank=True, default=0, null=True)),
                ('nombre_emploi_paye', models.IntegerField(blank=True, default=0)),
                ('depart_volontaire', models.IntegerField(blank=True, default=0, null=True)),
                ('demission', models.IntegerField(blank=True, default=0, null=True)),
                ('arrivee', models.IntegerField(blank=True, default=0)),
                ('poste_vacant_by_mob', models.IntegerField(blank=True, default=0, null=True)),
                ('poste_vacant_pouvu', models.IntegerField(blank=True, default=0, null=True)),
                ('recru_emploi_permanent', models.IntegerField(blank=True, default=0)),
                ('concours', models.IntegerField(blank=True, default=0, null=True)),
                ('mutation', models.IntegerField(blank=True, default=0, null=True)),
                ('detachement', models.IntegerField(blank=True, default=0, null=True)),
                ('recru_direct', models.IntegerField(blank=True, default=0, null=True)),
                ('interimaire', models.IntegerField(blank=True, default=0, null=True)),
                ('total_recru', models.IntegerField(blank=True, default=0, null=True)),
                ('annee', models.IntegerField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Annee_fiscale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('observation', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('est_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('seuil_immobilisation', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('designation_court', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('code_article', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('code_barre', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('type_article', models.IntegerField(blank=True, choices=[(1, 'Consommable'), (2, 'Service'), (3, 'Stockable')], null=True)),
                ('prix_unitaire', models.FloatField()),
                ('est_achetable', models.BooleanField(default=False)),
                ('est_vendable', models.BooleanField(default=False)),
                ('est_stockable', models.BooleanField(default=False)),
                ('est_manufacturable', models.BooleanField(default=False)),
                ('est_amortissable', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_identification', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('est_immobilise', models.BooleanField(default=False)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_fk_jrw', to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_AssetHistorique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('document', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('est_initial', models.BooleanField(default=False)),
                ('est_encours', models.BooleanField(default=False)),
                ('bon_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_historiques', to='ErpBackOffice.Model_Asset')),
            ],
        ),
        migrations.CreateModel(
            name='Model_Avis_appel_offre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_reference', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('numero_dossier', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('designation_commission', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('objet_appel', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('financement', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('type_appel_offre', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('lieu_consultation', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('qualification', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('conditions', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('date_signature', models.DateTimeField()),
                ('lieu_depot', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_depot', models.DateTimeField()),
                ('delai_engagement', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('montant_commission', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('desc', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Banque',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('adresse', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('observation', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('code', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Bareme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250)),
                ('reference', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('type', models.CharField(blank=True, max_length=250, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Billeterie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Bon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20)),
                ('date_prevue', models.DateTimeField(blank=True, null=True)),
                ('date_realisation', models.DateTimeField(blank=True, null=True)),
                ('est_realisee', models.BooleanField(default=True)),
                ('quantite_voulue', models.FloatField(default=0)),
                ('quantite_obtenue', models.FloatField(default=0)),
                ('est_reserve', models.BooleanField(default=False)),
                ('reference_document', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=50)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=300, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Bon_commande',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_commande', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_prevue', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_commande', models.DateTimeField(blank=True, null=True)),
                ('montant_total', models.FloatField(blank=True, null=True)),
                ('est_realisee', models.BooleanField(default=False)),
                ('reference_document', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('etat', models.CharField(blank=True, max_length=300, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Bon_inventaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_inventaire', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_inventaire', models.DateTimeField(auto_now=True)),
                ('montant_global', models.FloatField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('est_realisee', models.BooleanField(default=False)),
                ('quantite', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Bon_livraison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_livraison', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_livraison', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('quantite_demandee', models.IntegerField()),
                ('quantite_recue', models.IntegerField()),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Bon_reception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_reception', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_prevue', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_reception', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('montant_total', models.FloatField(blank=True, null=True)),
                ('est_realisee', models.BooleanField(default=False)),
                ('reference_document', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('est_groupe', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=300, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Bon_transfert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_transfert', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_transfert', models.DateTimeField(auto_now=True)),
                ('date_realisation', models.DateTimeField(blank=True, null=True)),
                ('montant_global', models.FloatField(default=0.0)),
                ('est_realisee', models.BooleanField(default=False)),
                ('quantite', models.IntegerField(default=0)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('reference_document', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Bulletin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250)),
                ('reference', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('periode', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('image', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('total_a_retenir', models.FloatField(blank=True, null=True)),
                ('brut_total', models.FloatField(blank=True, null=True)),
                ('net_a_payer', models.FloatField(blank=True, null=True)),
                ('brut_imposable', models.FloatField(blank=True, null=True)),
                ('net_imposable', models.FloatField(blank=True, null=True)),
                ('est_recalcule', models.BooleanField(blank=True, default=False, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_BulletinModele',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('horaire_paye', models.IntegerField(choices=[(1, 'Mensuel'), (2, 'Bi-mensuel'), (3, 'Trimestriel'), (4, 'Semestriel'), (5, 'Hebdomadaire'), (6, 'Bi-hebdomadaire'), (7, 'Annuel')], default=1)),
                ('est_actif', models.BooleanField(default=True)),
                ('par_defaut', models.BooleanField(default=False)),
                ('libelle_bulletin', models.CharField(blank=True, max_length=250, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Caisse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_CaptureCompte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ouverture', models.FloatField(default=0)),
                ('montant_solde', models.FloatField(default=0)),
                ('date_ouverture', models.DateField(blank=True, null=True)),
                ('date_fermeture', models.DateField(blank=True, null=True)),
                ('index', models.IntegerField(default=0)),
                ('est_credit', models.BooleanField()),
                ('date_capture', models.DateField()),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Categorie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=30)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(max_length=15)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Categorie_employe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salaire_base', models.FloatField()),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('created_at', models.DateTimeField()),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Categoriebudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('type', models.IntegerField(choices=[(1, 'Recette'), (2, 'Dépense')], default=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_CategorieRegle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('code', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_CategorieRH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.TextField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Centre_cout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('abbreviation', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('typeCentre', models.IntegerField(choices=[(1, 'Vue Analytique'), (2, 'Compte Analytique')], default=2)),
                ('date_debut', models.DateTimeField(blank=True, null=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Civilite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=20)),
                ('designation_court', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Model_ClassificationProfessionelle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('numero_reference', models.IntegerField()),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['numero_reference'],
            },
        ),
        migrations.CreateModel(
            name='Model_Compte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=64)),
                ('designation', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('permet_reconciliation', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('balance', models.FloatField(default=0.0)),
                ('est_obsolete', models.BooleanField(default=False)),
                ('origine', models.IntegerField(choices=[(1, 'Natif'), (2, 'Interne')], default=1)),
                ('vente_par_defaut', models.BooleanField(default=False)),
                ('achat_par_defaut', models.BooleanField(default=False)),
                ('fournisseur_par_defaut', models.BooleanField(default=False)),
                ('client_par_defaut', models.BooleanField(default=False)),
                ('taxe_par_defaut', models.BooleanField(default=False)),
                ('caisse_par_defaut', models.BooleanField(default=False)),
                ('banque_par_defaut', models.BooleanField(default=False)),
                ('marchandise_par_defaut', models.BooleanField(default=False)),
                ('personnel_par_defaut', models.BooleanField(default=False)),
                ('salaire_par_defaut', models.BooleanField(default=False)),
                ('liaison_par_defaut', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_CompteBanque',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('numero_compte', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('type_compte', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_CompteBanque_Employe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('numero_compte', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('type_compte', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('repartition', models.IntegerField(blank=True, null=True)),
                ('mode_paiement', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Condition_reglement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('nombre_jour', models.IntegerField()),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_ConditionReglement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=20)),
                ('nombre_jours', models.IntegerField()),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Config_Comptabilite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('societe_configure', models.BooleanField(default=False)),
                ('tresorerie_configure', models.BooleanField(default=False)),
                ('periode_configure', models.BooleanField(default=False)),
                ('est_active', models.BooleanField(default=True)),
                ('est_ajour', models.BooleanField(default=False)),
                ('digit_compte', models.IntegerField(default=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('annee_fiscale', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='config', to='ErpBackOffice.Model_Annee_fiscale')),
            ],
        ),
        migrations.CreateModel(
            name='Model_Config_Payroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taux_cnss', models.FloatField(default=3.5)),
                ('nbre_max_jours_travailles', models.FloatField(default=22.0)),
                ('nbre_mensualite', models.IntegerField(default=10)),
                ('taux_interet', models.FloatField(default=0)),
                ('est_active', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Conge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_conge', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('type', models.CharField(blank=True, default='', max_length=25, null=True)),
                ('nombre_jour', models.IntegerField(default=0)),
                ('nombre_jour_temp', models.IntegerField(default=0)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('observation', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Constante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250)),
                ('reference', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=4000, null=True)),
                ('code', models.CharField(max_length=50)),
                ('type_constant', models.IntegerField(choices=[(1, 'Calcul'), (2, 'Test'), (3, 'Tranche'), (4, 'Valeur'), (5, 'Rubrique'), (6, 'Prédefini'), (7, 'Individuel'), (8, 'Cumul'), (9, 'Date')], default=1)),
                ('periode_cumul', models.IntegerField(blank=True, choices=[(1, 'Paie en cours'), (2, 'Mensuelle'), (3, 'Trimestrielle'), (4, 'Annuelle'), (5, 'De date à date')], default=1, null=True)),
                ('date_debut_cumul', models.BigIntegerField(blank=True, null=True)),
                ('date_fin_cumul', models.BigIntegerField(blank=True, null=True)),
                ('date_constante', models.BigIntegerField(blank=True, null=True)),
                ('base_test', models.FloatField(blank=True, null=True)),
                ('base_test_is_const', models.BooleanField(default=False)),
                ('valeur', models.FloatField(blank=True, null=True)),
                ('valeur_is_const', models.BooleanField(default=False)),
                ('alors', models.FloatField(blank=True, null=True)),
                ('alors_is_const', models.BooleanField(default=False)),
                ('sinon', models.FloatField(blank=True, null=True)),
                ('sinon_is_const', models.BooleanField(default=False)),
                ('fonction', models.CharField(blank=True, max_length=100, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('alors_const', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alors_constantes', to='ErpBackOffice.Model_Constante')),
            ],
        ),
        migrations.CreateModel(
            name='Model_ConstanteCalcul',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(default=99)),
                ('type_operation', models.IntegerField(choices=[(1, 'Début'), (2, '+'), (3, '-'), (4, 'x'), (5, '/'), (6, 'Mod')], default=1)),
                ('code', models.FloatField(blank=True, null=True)),
                ('code_is_const', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='Model_ConstanteTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(default=99)),
                ('type_operation', models.IntegerField(choices=[(1, '<'), (2, '<='), (3, '>'), (4, '>='), (5, '=='), (6, '!=')], default=1)),
                ('type_condition', models.IntegerField(choices=[(1, 'Début'), (2, 'Ou'), (3, 'Et'), (4, 'sauf')], default=1)),
                ('valeur', models.FloatField(blank=True, null=True)),
                ('valeur_is_const', models.BooleanField(default=False)),
                ('code', models.FloatField(blank=True, null=True)),
                ('code_is_const', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='Model_ConstanteTranche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(default=99)),
                ('tranche_debut', models.FloatField(blank=True, null=True)),
                ('tranche_debut_is_const', models.BooleanField(default=False)),
                ('tranche_fin', models.FloatField(blank=True, null=True)),
                ('tranche_fin_is_const', models.BooleanField(default=False)),
                ('type_operation_debut', models.IntegerField(blank=True, choices=[(1, '<'), (2, '<='), (3, '>'), (4, '>='), (5, '=='), (6, '!=')], null=True)),
                ('type_operation_fin', models.IntegerField(blank=True, choices=[(1, '<'), (2, '<='), (3, '>'), (4, '>='), (5, '=='), (6, '!=')], null=True)),
                ('valeur', models.FloatField(blank=True, null=True)),
                ('valeur_is_const', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='Model_Demande_achat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_demande', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_demande', models.DateTimeField(blank=True, null=True)),
                ('est_groupe', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('type_demande', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('document', models.CharField(blank=True, max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Dependant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('type_dependance', models.CharField(blank=True, choices=[('enfant', 'Enfant'), ('conjoint', 'Conjoint'), ('conjoint', 'Conjointe')], default='enfant', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Devise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbole_devise', models.CharField(blank=True, max_length=5, null=True)),
                ('code_iso', models.CharField(blank=True, max_length=3, null=True)),
                ('designation', models.CharField(blank=True, max_length=20, null=True)),
                ('est_reference', models.BooleanField(default=False)),
                ('est_active', models.BooleanField(default=False)),
                ('est_virtuelle', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Diplome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('institution', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(blank=True, default='', max_length=600, null=True)),
                ('url_document', models.CharField(blank=True, default='', max_length=600, null=True)),
                ('numero_document', models.CharField(blank=True, default='', max_length=600, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=600, null=True)),
                ('est_verifie', models.BooleanField(default=False)),
                ('index', models.TextField(blank=True)),
                ('source_document_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=600, null=True)),
                ('metadonnees', models.TextField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=600, null=True)),
                ('taille', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Dossier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('url_dossier', models.CharField(blank=True, default='default storage', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Dossier_Social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_dossier_social', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('structure', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('lieu', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('sujet_plainte', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('observation', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('url', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('mail_envoye', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('date_fermeture', models.DateTimeField(auto_now=True)),
                ('statute', models.IntegerField(blank=True, choices=[(1, 'Maternité'), (2, 'Couverture Maladie'), (3, 'Frais médicaux'), (4, 'Evènement familiaux'), (5, 'Accident de travail'), (6, 'Enquêtes et Suivi'), (7, 'Auditions '), (8, 'Autres')], null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('alerte', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Model_DossierPaie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.IntegerField(choices=[(1, 'Janvier'), (2, 'Février'), (3, 'Mars'), (4, 'Avril'), (5, 'Mai'), (6, 'Juin'), (7, 'Juilllet'), (8, 'Août'), (9, 'Septembre'), (10, 'Octobre'), (11, 'Novembre'), (12, 'Décembre')], default=1)),
                ('annee', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_dossier', models.DateTimeField(blank=True, null=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('est_actif', models.BooleanField(default=False)),
                ('est_cloture', models.BooleanField(default=False)),
                ('est_calcul', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Droit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('droit', models.CharField(blank=True, max_length=50, null=True)),
                ('roles', models.CharField(blank=True, max_length=500, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_EchelonRH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.TextField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ecriture_analytique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('montant', models.FloatField(default=0)),
                ('type', models.IntegerField(choices=[(1, 'Engagement'), (2, 'Réel')], default=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_EcritureComptable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('montant_credit', models.FloatField()),
                ('montant_debit', models.FloatField()),
                ('date_echeance', models.DateTimeField(null=True)),
                ('est_lettre', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('annee_fiscale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annee_fiscale_ecriture', to='ErpBackOffice.Model_Annee_fiscale')),
            ],
        ),
        migrations.CreateModel(
            name='Model_ElementBulletin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('type_element', models.IntegerField(blank=True, choices=[(1, 'Gain'), (2, 'Retenue')], null=True)),
                ('categorie_element', models.IntegerField(blank=True, choices=[(1, 'imposable'), (2, 'Non imposable')], null=True)),
                ('type_calcul', models.IntegerField(blank=True, choices=[(1, 'Montant fixe'), (2, 'Pourcentage (%)'), (3, 'Résultat calcul'), (4, 'Résultat Barême'), (5, "Depend d'une variable")], null=True)),
                ('type_resultat', models.IntegerField(blank=True, choices=[(1, 'Brut imposable (BI)'), (2, 'Net imposable (NI)'), (3, 'Net à payer'), (4, 'Somme éléments à payer'), (5, 'Somme éléments à retenir'), (6, 'HR Dependant')], null=True)),
                ('reference', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('montant', models.FloatField(blank=True, null=True)),
                ('pourcentage', models.FloatField(blank=True, null=True)),
                ('calcul', models.CharField(blank=True, max_length=250, null=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Emplacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('couloir', models.IntegerField(default=0)),
                ('rayon', models.IntegerField(default=0)),
                ('hauteur', models.IntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('is_racine', models.BooleanField(default=False)),
                ('est_systeme', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Emploi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etablissement', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('lieu', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('fonctions', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('categorie_socio_professionnelle', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ("A'", "A'"), ("B'", "B'"), ("C'", "C'"), ("D'", "D'"), ("E'", "E'"), ("F'", "F'")], default='', max_length=100, null=True)),
                ('date_entree', models.DateTimeField()),
                ('date_sortie', models.DateTimeField()),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Etat_Facturation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_etat_facturation', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('date_etat', models.DateTimeField(blank=True, null=True)),
                ('etat', models.CharField(max_length=50)),
                ('est_facture', models.BooleanField(default=False)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('instructions', models.CharField(blank=True, default='', max_length=350, null=True)),
                ('echelle_notation', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('echelle_performance', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('echelle_coefficient', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('appreciation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_appreciation', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Evenement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('duree', models.CharField(blank=True, default='00:00', max_length=500, null=True)),
                ('date_debut', models.DateTimeField(blank=True, null=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('confidentialite', models.IntegerField(choices=[(1, 'Tout le monde'), (2, 'Utilisateur interne seulement'), (3, 'Moi seulement')], default=1)),
                ('est_actif', models.BooleanField(default=True)),
                ('journee', models.BooleanField(default=False)),
                ('est_recurrent', models.BooleanField(default=False)),
                ('interval_recurrent', models.IntegerField(default=1)),
                ('type_recurrent', models.IntegerField(choices=[(1, 'Jours'), (2, 'Semaines'), (3, 'Mois'), (4, 'Années')], default=1)),
                ('compte_recurrent', models.IntegerField(default=1)),
                ('type_fin_recurrent', models.IntegerField(choices=[(1, 'Nombre de répétitions'), (2, 'Date de fin')], default=1)),
                ('date_fin_recurrent', models.DateTimeField(blank=True, null=True)),
                ('recurrent_id', models.IntegerField(default=0)),
                ('lundi', models.BooleanField(default=False)),
                ('mardi', models.BooleanField(default=False)),
                ('mercredi', models.BooleanField(default=False)),
                ('jeudi', models.BooleanField(default=False)),
                ('vendredi', models.BooleanField(default=False)),
                ('samedi', models.BooleanField(default=False)),
                ('dimanche', models.BooleanField(default=False)),
                ('par_mois', models.IntegerField(choices=[(1, 'Date dans le mois'), (2, 'Jour du mois')], default=1)),
                ('date_du_mois', models.IntegerField(default=1)),
                ('jour_de_semaine', models.CharField(choices=[('1', 'Lundi'), ('2', 'Mardi'), ('3', 'Mercredi'), ('4', 'Jeudi'), ('5', 'Vendredi'), ('6', 'Samedi'), ('7', 'Dimanche')], default='1', max_length=10)),
                ('par_jour', models.IntegerField(choices=[(1, 'Premier'), (2, 'Seconde'), (3, 'Troisième'), (4, 'Quatrième'), (5, 'Cinquième'), (-1, 'Dernier')], default=1)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Exercicebudgetaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('montant', models.FloatField()),
                ('annee', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('is_cloture', models.BooleanField(default=False)),
                ('date_debut', models.DateTimeField(blank=True, null=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Expression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_expression', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_expression', models.DateTimeField(blank=True, null=True)),
                ('justification', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('document', models.CharField(blank=True, max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Facture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periode', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('numero_facture', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('montant', models.FloatField(blank=True, default=0, null=True)),
                ('montant_en_lettre', models.TextField()),
                ('montant_ht', models.FloatField(blank=True, default=0, null=True)),
                ('montant_taxe', models.FloatField(blank=True, default=0, null=True)),
                ('document', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('est_soldee', models.BooleanField(default=False)),
                ('est_facture_avoir', models.BooleanField(default=False)),
                ('est_nullable', models.BooleanField(default=True)),
                ('type', models.CharField(max_length=20)),
                ('type_facture_client', models.CharField(blank=True, max_length=20, null=True)),
                ('date_facturation', models.DateTimeField(blank=True, null=True)),
                ('date_echeance', models.DateTimeField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=300, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Fonction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Formation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departement', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('theme', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('objectif', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('public_cible', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('annee', models.IntegerField()),
                ('nombre_jour_formation', models.IntegerField()),
                ('type', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('organisme_formation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('localite_organisme', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('nombre_heure_par_jour', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('cout_formation', models.FloatField()),
                ('nombre_participant_par_jour', models.IntegerField()),
                ('frais_mission_hebergement', models.FloatField()),
                ('frais_deplacement_ht', models.FloatField()),
                ('priorite', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_debut', models.DateTimeField(auto_now=True)),
                ('date_fin', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('cout_formation_effective', models.FloatField(default=0)),
                ('frais_mission_hebergement_effective', models.FloatField(default=0)),
                ('frais_deplacement_ht_effective', models.FloatField(default=0)),
                ('nombre_participant_par_jour_effective', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_FournisseurArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_minimale', models.FloatField(default=0)),
                ('prix_unitaire', models.FloatField(default=1)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_GroupeAnalytique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('est_projet', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_GroupeMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('icon_menu', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('numero_ordre', models.IntegerField()),
                ('creation_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_GroupePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_GroupePermissionUtilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc', models.CharField(max_length=100)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Immobilisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('taux_amortissement', models.FloatField()),
                ('valeur_immobilier', models.FloatField()),
                ('type_amortissement', models.IntegerField(choices=[(1, 'Linéaire'), (2, 'Dégressif')], default=1)),
                ('duree_amortissement', models.FloatField(null=True)),
                ('unite_duree', models.IntegerField(choices=[(1, 'Mois'), (2, 'Année')], default=2)),
                ('est_prorata_temportis', models.BooleanField(default=False)),
                ('prorata_date', models.DateTimeField(null=True)),
                ('coefficient', models.FloatField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('est_comptabilise', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('date_acquisition', models.DateTimeField()),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_ItemBon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demandee', models.FloatField(default=0)),
                ('quantite_fournie', models.FloatField(default=0)),
                ('unite', models.CharField(blank=True, max_length=50, null=True)),
                ('prix_unitaire', models.FloatField(blank=True, null=True)),
                ('prix_lot', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(max_length=50)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_of_item_bon', to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_ItemBulletin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('taux', models.FloatField(blank=True, default=0.0, null=True)),
                ('base', models.FloatField(blank=True, default=0.0, null=True)),
                ('montant', models.FloatField(blank=True, default=0.0, null=True)),
                ('nombre', models.FloatField(blank=True, default=0.0, null=True)),
                ('taux_parpat', models.FloatField(blank=True, default=0.0, null=True)),
                ('montant_parpat', models.FloatField(blank=True, default=0.0, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('reference', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('periode', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='Model_ItemProfilPaye',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('valeur_pourcentage', models.FloatField(blank=True, null=True)),
                ('montant', models.FloatField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_ItemStructureSalariale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('valeur_pourcentage', models.FloatField(blank=True, null=True)),
                ('montant', models.FloatField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Journal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('code', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('type_journal', models.IntegerField(choices=[(1, 'Ventes'), (2, 'Achats'), (3, 'Banque'), (4, 'Caisse'), (5, 'Divers')], default=1)),
                ('est_affiche', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('est_journal_par_defaut', models.BooleanField(default=False)),
                ('sequence', models.IntegerField(default=100)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Lettrage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_commande',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demandee', models.IntegerField()),
                ('quantite_fournie', models.IntegerField()),
                ('prix_unitaire', models.FloatField()),
                ('prix_lot', models.FloatField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_Competence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competence', models.CharField(blank=True, max_length=100, null=True)),
                ('observation', models.CharField(blank=True, max_length=150, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_demande_achat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demande', models.IntegerField()),
                ('prix_unitaire', models.FloatField()),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_of_ligne_demande', to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_Expression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demande', models.IntegerField()),
                ('quantite_restante', models.IntegerField(null=True)),
                ('prix_unitaire', models.FloatField()),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_of_ligne_expression', to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_facture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demande', models.IntegerField()),
                ('prix_unitaire', models.FloatField()),
                ('remise', models.FloatField(default=0)),
                ('prix_lot', models.FloatField(blank=True, default=0, null=True)),
                ('ligne_montant_taxe', models.FloatField(blank=True, default=0, null=True)),
                ('designation', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_of_ligne_facture', to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_Formation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competence', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_Immobilisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.IntegerField(blank=True, null=True)),
                ('base_amortissement', models.FloatField(blank=True, null=True)),
                ('dotation', models.FloatField(blank=True, null=True)),
                ('cumul', models.FloatField(blank=True, null=True)),
                ('valeur_residuelle', models.FloatField(blank=True, null=True)),
                ('observation', models.CharField(blank=True, max_length=250, null=True)),
                ('date_amortissement', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_inventaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demandee', models.IntegerField()),
                ('quantite_fournie', models.IntegerField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_OperationTresorerie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('libelle', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('montant', models.FloatField()),
                ('date_ligne_operation', models.DateTimeField(null=True)),
                ('est_lettre', models.BooleanField(default=False)),
                ('type_operation', models.IntegerField(choices=[(1, 'Dépôt'), (2, 'Retrait')], default=1)),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_ordre_de_mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frais_de_mission', models.IntegerField()),
                ('frais_hebergement', models.FloatField()),
                ('status', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('description', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('url', models.CharField(blank=True, default=' ', max_length=250, null=True)),
                ('created_at', models.DateTimeField()),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_ordre_paiement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('montant', models.FloatField()),
                ('observation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_postulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_postulation', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_reception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demande', models.IntegerField()),
                ('quantite_fournie', models.IntegerField(default=0)),
                ('prix_unitaire', models.FloatField()),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('prix_lot', models.FloatField(blank=True, default=0, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_of_ligne_reception', to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_releve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degre', models.CharField(blank=True, default=' ', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_requete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frais_de_mission', models.IntegerField()),
                ('frais_hebergement', models.FloatField()),
                ('description', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('url', models.CharField(blank=True, default=' ', max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_Syndicat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ligne_transfert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_demandee', models.IntegerField()),
                ('quantite_fournie', models.IntegerField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('numero_serie', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_LigneBilleterie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billet', models.CharField(blank=True, max_length=100, null=True)),
                ('valeur', models.FloatField(blank=True, null=True)),
                ('sous_total', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_LigneBudgetaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('entite', models.CharField(default='1', max_length=1)),
                ('nature_activite', models.IntegerField(blank=True, choices=[(0, 'Electronique'), (1, 'Poste')], default=0, null=True)),
                ('nature_charge', models.IntegerField(choices=[(0, 'Variable'), (1, 'Fixe'), (2, 'Budget'), (3, 'Nature')], default=0)),
                ('localite', models.IntegerField(blank=True, choices=[(0, 'Brazzaville'), (1, 'Pointe-Noire'), (2, 'Ouesso'), (3, 'Dolisie')], default=0, null=True)),
                ('designation', models.CharField(max_length=50)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Inactive')], default=0)),
                ('pourcentage_alert', models.FloatField(default=0)),
                ('message_alert', models.CharField(blank=True, max_length=500, null=True)),
                ('is_alerted', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('activite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activite_fk', to='ErpBackOffice.Model_Activite')),
            ],
        ),
        migrations.CreateModel(
            name='Model_LignePaiementPret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('montant', models.FloatField()),
                ('est_succes', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('devise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_of_paiement_pret', to='ErpBackOffice.Model_Devise')),
                ('dossier_paie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_DossierPaie')),
            ],
        ),
        migrations.CreateModel(
            name='Model_LignePosteBudgetaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_LignesLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_LigneTraitementImmobilisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('prix_vente', models.FloatField(blank=True, null=True)),
                ('est_traite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Local',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('type_local', models.IntegerField(choices=[(1, 'Bureau'), (2, 'Salle de réunion'), (3, 'Entrepôt'), (4, 'Bâtiment')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_LotBulletins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250)),
                ('reference', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('type', models.CharField(blank=True, choices=[('TOUS', 'Pour tous agents'), ('CERTAINS', 'Pour certains agents'), ('DEPARTEMENT', 'Pour un département')], max_length=250, null=True)),
                ('type_modele', models.IntegerField(blank=True, choices=[(1, 'Individuel'), (2, 'Pour tous')], default=1, null=True)),
                ('est_regulier', models.BooleanField(default=False)),
                ('date_dossier', models.DateTimeField(blank=True, null=True)),
                ('date_debut', models.DateTimeField(blank=True, null=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('est_soumis', models.BooleanField(default=False)),
                ('est_valide', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=250, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('corps', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('type', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Mobilite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('service', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('type_mobilite', models.CharField(blank=True, choices=[('Promotion', 'Promotion'), ('Recrutement Interne', 'Recrutement Interne')], default='Promotion', max_length=100, null=True)),
                ('fonctions_occupees', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('categorie_socio_professionnelle', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ("A'", "A'"), ("B'", "B'"), ("C'", "C'"), ("D'", "D'"), ("E'", "E'"), ("F'", "F'")], default='', max_length=100, null=True)),
                ('categorie_socia_pro_precedent', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('modalites', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('ponderation', models.IntegerField(default=0)),
                ('date_entree', models.DateTimeField(blank=True, null=True)),
                ('date_sortie', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_module', models.CharField(blank=True, max_length=50, null=True)),
                ('code', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('est_installe', models.BooleanField(default=False)),
                ('url_vers', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_ordre', models.IntegerField()),
                ('icon_module', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('couleur', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_ModuleOverModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_modele', models.CharField(max_length=100)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Mouvement_stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('quantite_mouvement', models.IntegerField()),
                ('details', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('url_piece_concernee', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('module_source', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Operationnalisation_module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('est_active', models.BooleanField(default=False)),
                ('est_cloture', models.BooleanField(default=False)),
                ('observation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_OperationStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('reference', models.CharField(default='', max_length=10)),
                ('sequence', models.IntegerField(blank=True, default=100, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_OperationTresorerie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('type_operation', models.CharField(blank=True, choices=[('Banque', 'Banque'), ('Caisse', 'Caisse')], default='', max_length=100, null=True)),
                ('balance_initiale', models.FloatField()),
                ('solde', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_operation', models.DateTimeField()),
                ('etat', models.CharField(choices=[('created', 'created'), ('closed', 'closed')], default='created', max_length=50)),
                ('date_comptable', models.DateTimeField()),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ordre_de_mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ordre', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('objet_mission', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('destination', models.CharField(blank=True, default=' ', max_length=250, null=True)),
                ('moyen_transport', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('date_retour', models.DateTimeField()),
                ('date_depart', models.DateTimeField()),
                ('type', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('frais_mission', models.FloatField(default=0)),
                ('description', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('observation', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('etat', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('url', models.CharField(blank=True, default=' ', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ordre_paie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ordre_paie', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('date_paie', models.DateTimeField(auto_now=True)),
                ('is_validate', models.BooleanField(default=False)),
                ('is_accepted', models.BooleanField(default=False)),
                ('montant_global', models.FloatField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('preuve', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Ordre_paiement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('type_paiement', models.IntegerField()),
                ('date_echeance', models.DateTimeField()),
                ('etat', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150)),
                ('slogan', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('email', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('image', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('icon', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('image_cover', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('boite_postal', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('fax', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('numero_fiscal', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('site_web', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('adresse', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('nom_application', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('est_active', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Paiement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('type_paiement', models.IntegerField(blank=True, choices=[(1, 'Règlement'), (2, "Envoyer de l'argent"), (3, 'Transfert interne')], default=1, null=True)),
                ('montant', models.FloatField(blank=True, null=True)),
                ('est_lettre', models.BooleanField(default=False)),
                ('est_valide', models.BooleanField(default=False)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('etat', models.CharField(blank=True, max_length=300, null=True)),
                ('date_paiement', models.DateTimeField()),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_PaiementInterne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('montant', models.FloatField()),
                ('periode_paye', models.IntegerField(default=0)),
                ('date_periode', models.DateTimeField(blank=True, null=True)),
                ('est_valide', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(blank=True, max_length=300, null=True)),
                ('email', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('disponibilite', models.IntegerField(choices=[(1, 'Libre'), (2, 'Occupé')], default=1)),
                ('statut_participation', models.IntegerField(choices=[(1, 'En attente'), (2, 'Accepté'), (3, 'Refusé'), (4, 'Incertain')], default=1)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Payloads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logs', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('numero', models.IntegerField(blank=True, null=True, unique=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Personne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prenom', models.CharField(blank=True, max_length=50, null=True)),
                ('nom', models.CharField(blank=True, max_length=50, null=True)),
                ('postnom', models.CharField(blank=True, max_length=50, null=True)),
                ('nom_complet', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.CharField(blank=True, default='', max_length=700, null=True)),
                ('email', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('adresse', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('langue', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('bp', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('lieu_de_naissance', models.CharField(blank=True, max_length=50, null=True)),
                ('date_de_naissance', models.DateField(blank=True, max_length=50, null=True)),
                ('est_particulier', models.BooleanField(default=False)),
                ('url', models.CharField(blank=True, max_length=600, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_PieceComptable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('reference', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('montant', models.FloatField()),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('date_piece', models.DateTimeField(blank=True, default=None, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('code_telephone', models.CharField(blank=True, max_length=5, null=True)),
                ('place_type', models.IntegerField(choices=[(1, 'Pays'), (2, 'Etat / Province'), (3, 'Ville'), (4, 'Commune'), (5, 'Quartier')])),
                ('code_pays', models.CharField(blank=True, default='', max_length=3, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Poste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('nombre_subordonnes', models.IntegerField(default=0)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Poste_budgetaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=6, null=True)),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Presence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('arrive', models.TimeField()),
                ('depart', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Pret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, max_length=50, null=True)),
                ('montant', models.FloatField()),
                ('nbre_mensualite', models.IntegerField(default=1)),
                ('date_premiere_echeance', models.DateTimeField(blank=True, null=True)),
                ('taux_interet', models.FloatField(default=0)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_ProfilPaye',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=300, null=True)),
                ('reference', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('date_profil', models.DateTimeField(auto_now=True)),
                ('montant', models.FloatField(default=0)),
                ('has_debt', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_ProfilRH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_engagement', models.DateField(blank=True, null=True)),
                ('date_creation', models.DateField(auto_now=True, null=True)),
                ('debut_service', models.DateField(blank=True, null=True)),
                ('date_modification', models.DateField(blank=True, null=True)),
                ('education', models.CharField(blank=True, max_length=100, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('lieu_naissance', models.CharField(blank=True, max_length=100, null=True)),
                ('nationalite', models.CharField(blank=True, max_length=100, null=True)),
                ('seconde_nationalite', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_passeport', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_identification', models.CharField(blank=True, max_length=100, null=True)),
                ('compte_bancaire', models.CharField(blank=True, max_length=100, null=True)),
                ('etat_civil', models.CharField(blank=True, max_length=100, null=True)),
                ('lieu_travail', models.CharField(blank=True, max_length=100, null=True)),
                ('dependant', models.IntegerField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_ss', models.CharField(blank=True, max_length=100, null=True)),
                ('genre', models.CharField(blank=True, max_length=100, null=True)),
                ('situation_famille', models.CharField(blank=True, max_length=10, null=True)),
                ('matricule', models.CharField(blank=True, max_length=100, null=True)),
                ('permis', models.CharField(blank=True, max_length=100, null=True)),
                ('email_professionnel', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_professionnel', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_personnel', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_professionnel2', models.CharField(blank=True, max_length=100, null=True)),
                ('est_enconge', models.BooleanField(default=False)),
                ('designation_banque', models.CharField(blank=True, max_length=100, null=True)),
                ('adresse_banque', models.CharField(blank=True, max_length=100, null=True)),
                ('code_swift', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('categorie', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ("A'", "A'"), ("B'", "B'"), ("C'", "C'"), ("D'", "D'"), ("E'", "E'"), ("F'", "F'")], default='', max_length=100, null=True)),
                ('classificaion', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('contrat', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('lieu_exercice', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Projet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeprojet', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('date_debut', models.DateTimeField()),
                ('montant', models.FloatField(default=0.0)),
                ('solde', models.FloatField(default=0.0)),
                ('pourcentage_alert', models.FloatField(default=0)),
                ('message_alert', models.CharField(blank=True, max_length=500, null=True)),
                ('is_alerted', models.BooleanField(default=False)),
                ('date_fin', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Projet_professionnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projet', models.CharField(blank=True, default=' ', max_length=1000, null=True)),
                ('numero_projet', models.CharField(blank=True, default=' ', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Recouvrement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('statut_recouvrement', models.IntegerField(choices=[(1, 'En cours'), (2, 'fermé')], default=1)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_RecouvrementLigne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('statut_recouvrement', models.IntegerField(choices=[(1, 'En cours'), (2, 'fermé')], default=1)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Recrutement_interne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('est_fini', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Regle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('filtre', models.CharField(blank=True, max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_RegleSalariale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('code', models.CharField(max_length=10)),
                ('sequence', models.IntegerField(default=99)),
                ('type_element', models.IntegerField(choices=[(1, 'Gain'), (2, 'Retenue')], default=1)),
                ('quantite', models.IntegerField(default=1)),
                ('type_condition', models.CharField(choices=[('aucun', 'Toujours vrai'), ('plage', 'Plage'), ('code', 'Expression Python')], default='aucun', max_length=100)),
                ('plage_condition', models.CharField(blank=True, max_length=250, null=True)),
                ('code_condition', models.CharField(blank=True, max_length=250, null=True)),
                ('plage_min_condition', models.FloatField(blank=True, null=True)),
                ('plage_max_condition', models.FloatField(blank=True, null=True)),
                ('type_calcul', models.IntegerField(choices=[(1, 'Montant fixe'), (2, 'Pourcentage (%)'), (3, 'Résultat calcul'), (4, 'Résultat Barême'), (5, "Depend d'une variable")], default=1)),
                ('type_resultat', models.IntegerField(blank=True, choices=[(1, 'Brut imposable (BI)'), (2, 'Net imposable (NI)'), (3, 'Net à payer'), (4, 'Somme éléments à payer'), (5, 'Somme éléments à retenir'), (6, 'HR Dependant')], null=True)),
                ('montant_fixe', models.FloatField(blank=True, null=True)),
                ('pourcentage', models.FloatField(blank=True, null=True)),
                ('pourcentage_sur', models.CharField(blank=True, max_length=250, null=True)),
                ('code_python', models.CharField(blank=True, max_length=250, null=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('apparait_dans_bulletin', models.BooleanField(default=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Relance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_relance', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=250)),
                ('date_relance', models.DateTimeField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_RelanceRecouvrement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(max_length=250)),
                ('type_relance', models.IntegerField(choices=[(1, 'Email'), (2, 'Visite'), (3, 'Téléphonique'), (4, 'Courrier')], default=1)),
                ('date_relance', models.DateTimeField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Requete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_reference', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('date_depart', models.DateTimeField()),
                ('date_retour', models.DateTimeField()),
                ('description', models.CharField(blank=True, default=' ', max_length=300, null=True)),
                ('document', models.CharField(blank=True, default=' ', max_length=150, null=True)),
                ('etat', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('url', models.CharField(blank=True, default=' ', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Requete_competence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_requete', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('competence', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('observation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Requete_demande',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('type_requete', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Rib',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle_rib', models.IntegerField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('code_guichet', models.CharField(blank=True, max_length=50, null=True)),
                ('nom_guichet', models.CharField(blank=True, max_length=100, null=True)),
                ('titulaire_compte', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('iban', models.CharField(blank=True, max_length=100, null=True)),
                ('bic', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_role', models.CharField(blank=True, max_length=50, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_RoleAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_ActionSousModule')),
            ],
        ),
        migrations.CreateModel(
            name='Model_RoleModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_RoleSousModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_RoleUtilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Rubrique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250)),
                ('reference', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=4000, null=True)),
                ('code', models.CharField(max_length=10)),
                ('sequence', models.IntegerField(default=99)),
                ('type_element', models.IntegerField(blank=True, choices=[(1, 'Gain'), (2, 'Retenue')], null=True)),
                ('type_rubrique', models.IntegerField(choices=[(1, 'Brut'), (2, 'Cotisation'), (3, 'Non-soumise')], default=1)),
                ('type_formule', models.IntegerField(choices=[(1, 'Nombre x Base'), (2, 'Nombre x Taux'), (3, 'Nombre x Base x Taux'), (4, 'Base x Taux'), (5, 'Nombre / Base'), (6, 'Nombre / Taux'), (7, 'Nombre / Base / Taux'), (8, 'Base / Taux'), (9, 'Nombre / Base X Taux'), (10, 'Nombre X Base / Taux'), (11, 'Taux / Base'), (12, 'Taux / Nombre'), (13, 'Taux / Nombre / Base'), (14, 'Taux / Nombre X Base'), (15, 'Montant fixe')], default=1)),
                ('nombre_parsal', models.FloatField(blank=True, null=True)),
                ('nombre_parsal_is_const', models.BooleanField(default=False)),
                ('nombre_est_modifiable', models.BooleanField(default=False)),
                ('base_parsal', models.FloatField(blank=True, null=True)),
                ('base_parsal_is_const', models.BooleanField(default=False)),
                ('base_est_modifiable', models.BooleanField(default=False)),
                ('taux_parsal', models.FloatField(blank=True, null=True)),
                ('taux_parsal_is_const', models.BooleanField(default=False)),
                ('taux_est_modifiable', models.BooleanField(default=False)),
                ('montant_parsal', models.FloatField(blank=True, null=True)),
                ('montant_parsal_is_const', models.BooleanField(default=False)),
                ('montant_est_modifiable', models.BooleanField(default=False)),
                ('taux_parpat', models.FloatField(blank=True, null=True)),
                ('taux_parpat_is_const', models.BooleanField(default=False)),
                ('taux_pp_est_modifiable', models.BooleanField(default=False)),
                ('montant_parpat', models.FloatField(blank=True, null=True)),
                ('montant_parpat_is_const', models.BooleanField(default=False)),
                ('montant_pp_est_modifiable', models.BooleanField(default=False)),
                ('est_actif', models.BooleanField(default=True)),
                ('apparait_dans_bulletin', models.BooleanField(default=True)),
                ('est_cumul', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_SousModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_sous_module', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('groupe', models.CharField(blank=True, max_length=50, null=True)),
                ('icon_menu', models.CharField(blank=True, max_length=150, null=True)),
                ('url_vers', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_ordre', models.IntegerField()),
                ('est_model', models.BooleanField(default=False)),
                ('est_dashboard', models.BooleanField(default=False)),
                ('est_actif', models.BooleanField(default=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('creation_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_StatusRH',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.TextField(blank=True, default='', max_length=100, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_StockArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_disponible', models.FloatField()),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_StructureSalariale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('horaire_paye', models.IntegerField(choices=[(1, 'Mensuel'), (2, 'Bi-mensuel'), (3, 'Trimestriel'), (4, 'Semestriel'), (5, 'Hebdomadaire'), (6, 'Bi-hebdomadaire'), (7, 'Annuel')], default=1)),
                ('est_actif', models.BooleanField(default=True)),
                ('par_defaut', models.BooleanField(default=False)),
                ('libelle_bulletin', models.CharField(blank=True, max_length=250, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Syndicat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('role', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('objectifs', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Taux',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.FloatField()),
                ('est_courant', models.BooleanField(default=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Taxe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100)),
                ('categorie_taxe', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('portee_taxe', models.IntegerField(choices=[(1, 'Ventes'), (2, 'Achats'), (3, 'Aucune')], default=3)),
                ('est_par_defaut', models.BooleanField(default=False)),
                ('type_montant_taxe', models.IntegerField(choices=[(1, 'Fixe'), (2, 'Pourcentage du prix hors taxe'), (3, 'Pourcentage du prix TTC')], default=1)),
                ('montant', models.FloatField(default=0)),
                ('est_active', models.BooleanField(default=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TaxeOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_Taxe')),
            ],
        ),
        migrations.CreateModel(
            name='Model_Temp_Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_action', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('lien_action', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('source_identifiant', models.IntegerField(blank=True, null=True)),
                ('est_lu', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TraitementImmobilisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_traitement', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('type_traitement', models.IntegerField(choices=[(1, 'Cession'), (2, 'Mise au rebut')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TrancheBareme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('pourcentage_net_impot', models.FloatField(blank=True, null=True)),
                ('tranche_debut', models.FloatField(blank=True, null=True)),
                ('tranche_fin', models.FloatField(blank=True, null=True)),
                ('montant_net_impot', models.FloatField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('statut', models.IntegerField(choices=[(1, 'Created'), (2, 'Submitted'), (3, 'Cancelled'), (4, 'Success'), (5, 'Error')])),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('moyen_paiement', models.CharField(blank=True, choices=[(1, 'Cash'), (2, 'Virement Banquaire'), (3, 'Chèque')], default='', max_length=20)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Transactionbudgetaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('montant', models.FloatField()),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('typetransactionbudgetaire', models.IntegerField(choices=[(1, 'Normal'), (2, 'Rallonge'), (3, 'Diminution'), (4, 'Dotation')], default=1)),
                ('statut', models.IntegerField(choices=[(0, 'Générée'), (1, 'En cours'), (2, 'Traitée'), (3, 'Annulée')], default=0)),
                ('engagement', models.FloatField(blank=True, default=0.0, null=True)),
                ('reel', models.FloatField(blank=True, default=0.0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Type_conge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('nombre_limite', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('max_leaves', models.IntegerField()),
                ('leaves_taken', models.IntegerField()),
                ('remaining', models.IntegerField()),
                ('double_validation', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Type_Diplome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('numero_reference', models.IntegerField(blank=True, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TypeArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(blank=True, max_length=20, null=True)),
                ('est_stockable', models.BooleanField(default=False)),
                ('est_amortissable', models.BooleanField(default=False)),
                ('duree_amortissement', models.CharField(blank=True, max_length=20, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TypeCompte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100)),
                ('type', models.IntegerField(choices=[(1, 'RECEVABLE'), (2, 'PAYABLE'), (3, 'BANQUE ET CAISSE'), (4, 'AUTRE')])),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('est_inclu_dans_balance_initiale', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TypeEmplacement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('est_systeme', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TypeEvenement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Typefacture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('observation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('type', models.IntegerField(choices=[(1, 'Fournisseur'), (2, 'Client')], default=2)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TypeOrganisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TypeStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('type_salaire', models.IntegerField(choices=[(1, 'Mensuel'), (2, 'Horaire')], default=1)),
                ('horaire_paye', models.IntegerField(choices=[(1, 'Mensuel'), (2, 'Bi-mensuel'), (3, 'Trimestriel'), (4, 'Semestriel'), (5, 'Hebdomadaire'), (6, 'Bi-hebdomadaire'), (7, 'Annuel')], default=1)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Typetransactionbudgetaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_TypeUnite_fonctionnelle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('code', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Unite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('symbole_unite', models.CharField(max_length=20)),
                ('est_systeme', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Unite_fonctionnelle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('code', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('est_racine', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('niveau', models.IntegerField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_UniteAchatArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unites_achat', to='ErpBackOffice.Model_Article')),
            ],
        ),
        migrations.CreateModel(
            name='Model_UserSessions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('login_date', models.DateTimeField(blank=True, null=True)),
                ('logout_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='session_of_usersession', to='sessions.Session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_of_usersession', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Vehicule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('marque', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('date_acquisition', models.DateTimeField()),
                ('image', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('reference_licence', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('couleur', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('transmission', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('type_carburant', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Vehicule_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('logo', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('description', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Wkf_Approbation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=500)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Wkf_Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Wkf_Etape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=50)),
                ('label', models.CharField(blank=True, max_length=50, null=True)),
                ('est_initiale', models.BooleanField(default=False)),
                ('est_finale', models.BooleanField(default=False)),
                ('est_decisive', models.BooleanField(default=False)),
                ('num_ordre', models.IntegerField(blank=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Wkf_Historique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('document_id', models.PositiveIntegerField(blank=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Wkf_Transition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('traitement', models.CharField(blank=True, max_length=250, null=True)),
                ('num_ordre', models.IntegerField(blank=True, null=True)),
                ('est_decisive', models.BooleanField(default=False)),
                ('identifiant_cle', models.IntegerField(blank=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model_Wkf_Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(max_length=30, unique=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Temp_EcritureComptable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('montant_credit', models.FloatField()),
                ('montant_debit', models.FloatField()),
                ('date_echeance', models.DateTimeField(null=True)),
                ('est_lettre', models.BooleanField(default=False)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('url', models.CharField(blank=True, max_length=250, null=True)),
                ('annee_fiscale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temp_annee_fiscale_ecriture', to='ErpBackOffice.Model_Annee_fiscale')),
            ],
        ),
        migrations.CreateModel(
            name='Model_Client',
            fields=[
                ('model_personne_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ErpBackOffice.Model_Personne')),
                ('sexe', models.CharField(blank=True, max_length=10, null=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            bases=('ErpBackOffice.model_personne',),
        ),
        migrations.CreateModel(
            name='Model_Employe',
            fields=[
                ('model_personne_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ErpBackOffice.Model_Personne')),
                ('sexe', models.CharField(blank=True, max_length=10, null=True)),
                ('date_entree', models.DateTimeField(auto_now=True)),
                ('est_permanent', models.BooleanField(default=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            bases=('ErpBackOffice.model_personne',),
        ),
        migrations.CreateModel(
            name='Model_Fournisseur',
            fields=[
                ('model_personne_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ErpBackOffice.Model_Personne')),
                ('denomination', models.CharField(blank=True, max_length=100, null=True)),
                ('domaine', models.CharField(blank=True, max_length=50, null=True)),
                ('categorie', models.CharField(blank=True, max_length=100, null=True)),
                ('date_fondation', models.DateTimeField(auto_now_add=True)),
                ('etat', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            bases=('ErpBackOffice.model_personne',),
        ),
        migrations.AddField(
            model_name='temp_ecriturecomptable',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temp_auteur_of_ecriture', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='temp_ecriturecomptable',
            name='compte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temp_compte_of_ecriture', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='temp_ecriturecomptable',
            name='dossier_paie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dossier_paie_of_ecriture', to='ErpBackOffice.Model_DossierPaie'),
        ),
        migrations.AddField(
            model_name='temp_ecriturecomptable',
            name='lettrage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='temp_lettrage_ecriture_comptable', to='ErpBackOffice.Model_Lettrage'),
        ),
        migrations.AddField(
            model_name='temp_ecriturecomptable',
            name='lot_bulletin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lot_bulletin_of_temp', to='ErpBackOffice.Model_LotBulletins'),
        ),
        migrations.AddField(
            model_name='temp_ecriturecomptable',
            name='piece_comptable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temp_piece_comptable_of_ecriture', to='ErpBackOffice.Model_PieceComptable'),
        ),
        migrations.AddField(
            model_name='temp_ecriturecomptable',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_wkf_workflow',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_wkfs', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_wkf_workflow',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='model_wkf_transition',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_wkf_transitions', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_wkf_transition',
            name='condition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conditions_transitions', to='ErpBackOffice.Model_Wkf_Condition'),
        ),
        migrations.AddField(
            model_name='model_wkf_transition',
            name='etape_destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions_etapes_destination', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_wkf_transition',
            name='etape_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions_etapes_source', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_wkf_transition',
            name='groupe_permission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transition_groupe_permission', to='ErpBackOffice.Model_GroupePermission'),
        ),
        migrations.AddField(
            model_name='model_wkf_transition',
            name='role_utilisateur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles_transitions', to='ErpBackOffice.Model_Role'),
        ),
        migrations.AddField(
            model_name='model_wkf_transition',
            name='unite_fonctionnelle',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unite_fonctionnelle_of_transition', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_wkf_historiques', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='bon',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_bon', to='ErpBackOffice.Model_Bon'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='bon_reception',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_bonreception', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='bon_transfert',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_bontransfert', to='ErpBackOffice.Model_Bon_transfert'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='demande_achat',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_demandes', to='ErpBackOffice.Model_Demande_achat'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='etape',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='workflow_etapes', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='etat_facturation',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_etat_facturation', to='ErpBackOffice.Model_Etat_Facturation'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='expression',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_expressions', to='ErpBackOffice.Model_Expression'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='facture',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_facture', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='paiement',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_paiement', to='ErpBackOffice.Model_Paiement'),
        ),
        migrations.AddField(
            model_name='model_wkf_etape',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_wkf_etapes', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_wkf_etape',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etapes_workflows', to='ErpBackOffice.Model_Wkf_Workflow'),
        ),
        migrations.AddField(
            model_name='model_wkf_condition',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_wkf_conditions', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_wkf_approbation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_wkf_appros', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_wkf_approbation',
            name='transition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approbations', to='ErpBackOffice.Model_Wkf_Transition'),
        ),
        migrations.AddField(
            model_name='model_vehicule_model',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_vehicule_model_hou', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_vehicule_model',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_vehicule',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_vehicule_lvh', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_vehicule',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_fk_mhf', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_vehicule',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_vehicule',
            name='vehicule_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicule_model_fk_qvt', to='ErpBackOffice.Model_Vehicule_model'),
        ),
        migrations.AddField(
            model_name='model_uniteachatarticle',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unites_achat', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_uniteachatarticle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_uniteachatarticle',
            name='unite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_Unite'),
        ),
        migrations.AddField(
            model_name='model_unite_fonctionnelle',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_unite_fonctionnelle', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_unite_fonctionnelle',
            name='emplacement',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Emplacement'),
        ),
        migrations.AddField(
            model_name='model_unite_fonctionnelle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_unite_fonctionnelle',
            name='type_unite_fonctionnelle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unite_fonctionnelles', to='ErpBackOffice.Model_TypeUnite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_unite_fonctionnelle',
            name='unite_fonctionnelle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unite_fonctionnelle_parent', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_unite',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unites', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_unite',
            name='categorie_unite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unites', to='ErpBackOffice.Model_Categorie'),
        ),
        migrations.AddField(
            model_name='model_unite',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_typeunite_fonctionnelle',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='type_unite_fonctionnelles', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typeunite_fonctionnelle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_typetransactionbudgetaire',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_typetransactionbudgetaire_gaw', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typestructure',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_types_structures', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typeorganisation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='types_organisations', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typeorganisation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_typefacture',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_typefactureclient_rri', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typefacture',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_typeevenement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_type_evenements', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typeevenement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_typeemplacement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='types_emplacement', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typeemplacement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_typecompte',
            name='auteur',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typecompte',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_typearticle',
            name='auteur',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_typearticle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_type_diplome',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_type_diplome', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_type_diplome',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_type_conge',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_type_conge_lsd', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_type_conge',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_transactionbudgetaire_gpj', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='bon_reception',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_reception_trans_bgt', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_fk_xaw', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_de_model_transactionbudgetaire_gpj', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='exercice_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exerice_bdgt_of_transaction', to='ErpBackOffice.Model_Exercicebudgetaire'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facture_of_transaction_budgetaire', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='ligne_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_on_transaction', to='ErpBackOffice.Model_LigneBudgetaire'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='ordre_mission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordre_mission_of_transaction', to='ErpBackOffice.Model_Ordre_de_mission'),
        ),
        migrations.AddField(
            model_name='model_transactionbudgetaire',
            name='poste_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transaction_of_postbudgetaire', to='ErpBackOffice.Model_Poste_budgetaire'),
        ),
        migrations.AddField(
            model_name='model_transaction',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_transaction',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_tranchebareme',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tranche_baremes', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_tranchebareme',
            name='bareme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tranche_baremes', to='ErpBackOffice.Model_Bareme'),
        ),
        migrations.AddField(
            model_name='model_tranchebareme',
            name='devise',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tranche_baremes', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_tranchebareme',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_traitementimmobilisation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_traitement_immobilisation_pgu', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_traitementimmobilisation',
            name='rapport_inventaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rapport_inventaire_fk_dyb', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_traitementimmobilisation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_temp_notification',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_temp_notification', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_temp_notification',
            name='notification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notif_fk_sk', to='ErpBackOffice.Model_Notification'),
        ),
        migrations.AddField(
            model_name='model_temp_notification',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_taxe',
            name='auteur',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_taxe',
            name='compte_taxe',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_taxe',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_of_taxe', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_taxe',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_taux',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taux_crees', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_taux',
            name='devise_arrive',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taux_subits', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_taux',
            name='devise_depart',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taux_lies', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_taux',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_syndicat',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_syndicat_soo', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_syndicat',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_structuresalariale',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_structures_salariales', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_structuresalariale',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='structures_salariales', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_structuresalariale',
            name='journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='structures_salariales', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_structuresalariale',
            name='regles',
            field=models.ManyToManyField(related_name='structures_salariales', to='ErpBackOffice.Model_RegleSalariale'),
        ),
        migrations.AddField(
            model_name='model_structuresalariale',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_structuresalariale',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='structures_salariales', to='ErpBackOffice.Model_TypeStructure'),
        ),
        migrations.AddField(
            model_name='model_stockarticle',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_stock_article', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_stockarticle',
            name='emplacement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_of_lks', to='ErpBackOffice.Model_Emplacement'),
        ),
        migrations.AddField(
            model_name='model_stockarticle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_statusrh',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_statuts_rh', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_statusrh',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_sousmodule',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_sous_module', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_sousmodule',
            name='groupe_menu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groupe_menu', to='ErpBackOffice.Model_GroupeMenu'),
        ),
        migrations.AddField(
            model_name='model_sousmodule',
            name='model_principal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='model_sousmodule',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sous_modules', to='ErpBackOffice.Model_Module'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rubriques', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='base_parsal_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_pp_rubriques', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='compte_credit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_rubriques', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='compte_debit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debit_rubriques', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rubriques', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='montant_parpat_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='montant_pp_rubriques', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='montant_parsal_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='montant_ps_rubriques', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='nombre_parsal_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nombre_pp_rubriques', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='taux_parpat_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taux_pp_rubriques', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_rubrique',
            name='taux_parsal_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taux_ps_rubriques', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_roleutilisateur',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles_attribues', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_roleutilisateur',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utilisateurs_role', to='ErpBackOffice.Model_Role'),
        ),
        migrations.AddField(
            model_name='model_roleutilisateur',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_roleutilisateur',
            name='utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_rolesousmodule',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attachements_role_sous_module', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_rolesousmodule',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sous_modules_role', to='ErpBackOffice.Model_Role'),
        ),
        migrations.AddField(
            model_name='model_rolesousmodule',
            name='sous_module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_SousModule'),
        ),
        migrations.AddField(
            model_name='model_rolesousmodule',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_rolemodule',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attachements_role_module', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_rolemodule',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_Module'),
        ),
        migrations.AddField(
            model_name='model_rolemodule',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules_role', to='ErpBackOffice.Model_Role'),
        ),
        migrations.AddField(
            model_name='model_rolemodule',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_roleaction',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions_attribues', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_roleaction',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions_role', to='ErpBackOffice.Model_Role'),
        ),
        migrations.AddField(
            model_name='model_roleaction',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_role',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles_crees', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_role',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_rib',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_rib_compte_bancaire', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_rib',
            name='banque',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banque_rib', to='ErpBackOffice.Model_Banque'),
        ),
        migrations.AddField(
            model_name='model_rib',
            name='comptebanque',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compte_bancaire_employe', to='ErpBackOffice.Model_CompteBanque_Employe'),
        ),
        migrations.AddField(
            model_name='model_rib',
            name='pays',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pays', to='ErpBackOffice.Model_Place'),
        ),
        migrations.AddField(
            model_name='model_rib',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_requete_demande',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_requete_demande', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_requete_demande',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_requete_competence',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_requete_competence_myp', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_requete_competence',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_requete_competence', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_requete',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_fk_cje', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_requete',
            name='centre_cout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centre_cout_fk_eko', to='ErpBackOffice.Model_Centre_cout'),
        ),
        migrations.AddField(
            model_name='model_requete',
            name='service_ref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_ref_fk_nxn', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_requete',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_fk_hgk', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_relancerecouvrement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_relances_recouvrements', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_relancerecouvrement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_relance',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_relances', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_relance',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_reglesalariale',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regle_salariales', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_reglesalariale',
            name='bareme',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regle_salariales', to='ErpBackOffice.Model_Bareme'),
        ),
        migrations.AddField(
            model_name='model_reglesalariale',
            name='categorie',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regle_salariales', to='ErpBackOffice.Model_CategorieRegle'),
        ),
        migrations.AddField(
            model_name='model_reglesalariale',
            name='compte_credit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_regle_salariales', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_reglesalariale',
            name='compte_debit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debit_regle_salariales', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_reglesalariale',
            name='devise',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regle_salariales', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_reglesalariale',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_regle',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_regle', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_regle',
            name='groupe_permission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='regle_link_to_a_group', to='ErpBackOffice.Model_GroupePermission'),
        ),
        migrations.AddField(
            model_name='model_regle',
            name='permissions',
            field=models.ManyToManyField(related_name='regle_link_to_all_permission', to='ErpBackOffice.Model_Permission'),
        ),
        migrations.AddField(
            model_name='model_regle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_recrutement_interne',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_recrutement_interne_txm', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_recrutement_interne',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_fk_dbo', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_recrutement_interne',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_recouvrementligne',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_lignes_recouvrements', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_recouvrementligne',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lignes_recouvrements', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_recouvrementligne',
            name='recouvrement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lignes', to='ErpBackOffice.Model_Recouvrement'),
        ),
        migrations.AddField(
            model_name='model_recouvrementligne',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_recouvrement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_recouvrements', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_recouvrement',
            name='relances',
            field=models.ManyToManyField(to='ErpBackOffice.Model_RelanceRecouvrement'),
        ),
        migrations.AddField(
            model_name='model_recouvrement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_projet_professionnel',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_projet_professionnel_yhf', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_projet_professionnel',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_projet',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_projet_loc', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_projet',
            name='categoriebudget',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categoriebudget_fk_nch', to='ErpBackOffice.Model_Categoriebudget'),
        ),
        migrations.AddField(
            model_name='model_projet',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_fk_mxb', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_projet',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_profilrh',
            name='agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_profilrh',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profil_auteur', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_profilrh',
            name='fonctions',
            field=models.ManyToManyField(to='ErpBackOffice.Model_Fonction'),
        ),
        migrations.AddField(
            model_name='model_profilrh',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_profilpaye',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_profil_paie', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_profilpaye',
            name='poste',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poste_on_profil_paie', to='ErpBackOffice.Model_Poste'),
        ),
        migrations.AddField(
            model_name='model_profilpaye',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_profilpaye',
            name='structure_salariale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profils_paies', to='ErpBackOffice.Model_StructureSalariale'),
        ),
        migrations.AddField(
            model_name='model_pret',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_pret', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_pret',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_of_pret', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_pret',
            name='rubrique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Rubrique'),
        ),
        migrations.AddField(
            model_name='model_pret',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_presence',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_presence_gzc', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_presence',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_presence',
            name='unite_fonctionelle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unite_fonctionelle_fk_qvi', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_poste_budgetaire',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_poste_budgetaire_dxg', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_poste_budgetaire',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_poste',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_poste', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_poste',
            name='categorie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postes', to='ErpBackOffice.Model_Categorie'),
        ),
        migrations.AddField(
            model_name='model_poste',
            name='classification_pro',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postes', to='ErpBackOffice.Model_ClassificationProfessionelle'),
        ),
        migrations.AddField(
            model_name='model_poste',
            name='departement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postes', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_poste',
            name='lieu_exercice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postes', to='ErpBackOffice.Model_Local'),
        ),
        migrations.AddField(
            model_name='model_poste',
            name='localisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postes', to='ErpBackOffice.Model_Place'),
        ),
        migrations.AddField(
            model_name='model_poste',
            name='responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postes', to='ErpBackOffice.Model_Poste'),
        ),
        migrations.AddField(
            model_name='model_poste',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_place',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_place', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_place',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fils', to='ErpBackOffice.Model_Place'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_piece_comptable', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='bon_commande',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_commande_of_piece_commande', to='ErpBackOffice.Model_Bon_commande'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='bon_reception',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_reception_of_piece_commande', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_of_piece_comptable', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facture_on_piece_comptable', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='journal_comptable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_of_piece_comptable', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='lot_bulletin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lot_bulletin_of_piece_comptable', to='ErpBackOffice.Model_LotBulletins'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='partenaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_piececomptable',
            name='taux',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taux_of_piece_comptable', to='ErpBackOffice.Model_Taux'),
        ),
        migrations.AddField(
            model_name='model_personne',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personnes_creees', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_personne',
            name='civilite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Civilite'),
        ),
        migrations.AddField(
            model_name='model_personne',
            name='commune_quartier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personnes', to='ErpBackOffice.Model_Place'),
        ),
        migrations.AddField(
            model_name='model_personne',
            name='compte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsable_crees', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_permission',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_permission', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_permission',
            name='sous_module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permission_of_sous_module', to='ErpBackOffice.Model_SousModule'),
        ),
        migrations.AddField(
            model_name='model_permission',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_payloads',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_payload', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_payloads',
            name='paiement',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paiement_transaction', to='ErpBackOffice.Model_Paiement'),
        ),
        migrations.AddField(
            model_name='model_payloads',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_participant',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_participants', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_participant',
            name='evenement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='participants', to='ErpBackOffice.Model_Evenement'),
        ),
        migrations.AddField(
            model_name='model_participant',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_paiementinterne',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_paiements_internes', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_paiementinterne',
            name='conge',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_internes_conge', to='ErpBackOffice.Model_Conge'),
        ),
        migrations.AddField(
            model_name='model_paiementinterne',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_internes_etat', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_paiementinterne',
            name='dossier_paie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_internes_item', to='ErpBackOffice.Model_LotBulletins'),
        ),
        migrations.AddField(
            model_name='model_paiementinterne',
            name='item_bulletin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_internes_devise', to='ErpBackOffice.Model_ItemBulletin'),
        ),
        migrations.AddField(
            model_name='model_paiementinterne',
            name='pret',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_internes_pret', to='ErpBackOffice.Model_Pret'),
        ),
        migrations.AddField(
            model_name='model_paiementinterne',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_paiementinterne',
            name='taux',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_intern_taux', to='ErpBackOffice.Model_Taux'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_paiements', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='ligne_operation_tresorerie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_operation_link_paiement', to='ErpBackOffice.Model_Ligne_OperationTresorerie'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='partenaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_paiement', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='taux',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Taux'),
        ),
        migrations.AddField(
            model_name='model_paiement',
            name='transaction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='paiement', to='ErpBackOffice.Model_Transaction'),
        ),
        migrations.AddField(
            model_name='model_organisation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisations', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_organisation',
            name='commune_quartier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisations', to='ErpBackOffice.Model_Place'),
        ),
        migrations.AddField(
            model_name='model_organisation',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisations', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_organisation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_organisation',
            name='type_organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisations', to='ErpBackOffice.Model_TypeOrganisation'),
        ),
        migrations.AddField(
            model_name='model_ordre_paiement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_ordre_paiement_mat', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ordre_paiement',
            name='caisse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='caisse_fk_upy', to='ErpBackOffice.Model_Caisse'),
        ),
        migrations.AddField(
            model_name='model_ordre_paiement',
            name='compte_banque',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banque_fk_wiw', to='ErpBackOffice.Model_CompteBanque'),
        ),
        migrations.AddField(
            model_name='model_ordre_paiement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_fkordre_depaiement', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ordre_paie',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ordre_paie', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ordre_paie',
            name='compte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_about_ordre_paie', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_ordre_paie',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ordre_de_mission',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_fk_bxn', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ordre_de_mission',
            name='ligne_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_budgetaire_fk_iwx', to='ErpBackOffice.Model_LigneBudgetaire'),
        ),
        migrations.AddField(
            model_name='model_ordre_de_mission',
            name='requete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requete_fk_1_tzj', to='ErpBackOffice.Model_Requete'),
        ),
        migrations.AddField(
            model_name='model_ordre_de_mission',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_fk_hgk_mission', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_operationtresorerie',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_operationtresorerie_zbm', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_operationtresorerie',
            name='billeterie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billeterie_of_operation_tresorerie', to='ErpBackOffice.Model_Billeterie'),
        ),
        migrations.AddField(
            model_name='model_operationtresorerie',
            name='caisse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='caisse_fk_zix', to='ErpBackOffice.Model_Caisse'),
        ),
        migrations.AddField(
            model_name='model_operationtresorerie',
            name='compte_banque',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banque_fk_ygi', to='ErpBackOffice.Model_CompteBanque'),
        ),
        migrations.AddField(
            model_name='model_operationtresorerie',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_fk_kzb', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_operationtresorerie',
            name='journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_fk_ukq', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_operationtresorerie',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_operationtresorerie',
            name='taux',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taux_fk_pyi', to='ErpBackOffice.Model_Taux'),
        ),
        migrations.AddField(
            model_name='model_operationstock',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_operation_stock', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_operationstock',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_operationnalisation_module',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_operationnalisation_module_pyz', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_operationnalisation_module',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='module_fk_xdu', to='ErpBackOffice.Model_Module'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_notification_dmj', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='avis_appel_offre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='avis_appel_sk', to='ErpBackOffice.Model_Avis_appel_offre'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='bon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_sk', to='ErpBackOffice.Model_Bon'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='bon_reception',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_reception_sk', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='bon_transfert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_transfert_ok', to='ErpBackOffice.Model_Bon_transfert'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='conge',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_reception_sk', to='ErpBackOffice.Model_Conge'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='demande',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demande_sk', to='ErpBackOffice.Model_Demande_achat'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='dossier_social',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiement_skdoer_dossier', to='ErpBackOffice.Model_Dossier_Social'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='expression',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expression_sk', to='ErpBackOffice.Model_Expression'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facture_sdke', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='mission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiement_skdoer_mission', to='ErpBackOffice.Model_Ordre_de_mission'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='paiement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiement_skdoer', to='ErpBackOffice.Model_Paiement'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='requete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiement_skdoer_requete', to='ErpBackOffice.Model_Requete'),
        ),
        migrations.AddField(
            model_name='model_notification',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_mouvement_stock',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_mouvement_stock', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_mouvement_stock',
            name='bon_commande',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_commande_of_mouvement_stock', to='ErpBackOffice.Model_Bon_commande'),
        ),
        migrations.AddField(
            model_name='model_mouvement_stock',
            name='bon_inventaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_commande_of_mouvement_stock', to='ErpBackOffice.Model_Bon_inventaire'),
        ),
        migrations.AddField(
            model_name='model_mouvement_stock',
            name='bon_reception',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_commande_of_mouvement_stock', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_mouvement_stock',
            name='bon_transfert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_commande_of_mouvement_stock', to='ErpBackOffice.Model_Bon_transfert'),
        ),
        migrations.AddField(
            model_name='model_mouvement_stock',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_mouvement_stock',
            name='stock_article_entrant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mouvement_stock_article_entrant', to='ErpBackOffice.Model_StockArticle'),
        ),
        migrations.AddField(
            model_name='model_mouvement_stock',
            name='stock_article_sortant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mouvement_stock_article_sortant', to='ErpBackOffice.Model_StockArticle'),
        ),
        migrations.AddField(
            model_name='model_moduleovermodel',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_moduleovermodel', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_moduleovermodel',
            name='module_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Module'),
        ),
        migrations.AddField(
            model_name='model_moduleovermodel',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_module',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_module', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_module',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_mobilite',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_mobilite_gny', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_mobilite',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_message',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_message_zam', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_message',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_fk_odz', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_message',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_lotbulletins',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lot_bulletins', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_lotbulletins',
            name='departement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lot_bulletins', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_lotbulletins',
            name='dossier_paie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lot_bulletins', to='ErpBackOffice.Model_DossierPaie'),
        ),
        migrations.AddField(
            model_name='model_lotbulletins',
            name='lignes',
            field=models.ManyToManyField(to='ErpBackOffice.Model_LignesLot'),
        ),
        migrations.AddField(
            model_name='model_lotbulletins',
            name='modele_bulletin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lot_bulletins', to='ErpBackOffice.Model_BulletinModele'),
        ),
        migrations.AddField(
            model_name='model_lotbulletins',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lot_bulletins', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_local',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_local_kxv', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_local',
            name='lieu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locals', to='ErpBackOffice.Model_Place'),
        ),
        migrations.AddField(
            model_name='model_local',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locals_parent', to='ErpBackOffice.Model_Local'),
        ),
        migrations.AddField(
            model_name='model_local',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_lignetraitementimmobilisation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_ligne_traitementimmobilisation_apv', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_lignetraitementimmobilisation',
            name='immobilisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='immobilisation_fk_dhr', to='ErpBackOffice.Model_Immobilisation'),
        ),
        migrations.AddField(
            model_name='model_lignetraitementimmobilisation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_lignetraitementimmobilisation',
            name='traitement_immobilisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ligne_of_traitement', to='ErpBackOffice.Model_TraitementImmobilisation'),
        ),
        migrations.AddField(
            model_name='model_ligneslot',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_lignes_lots', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligneslot',
            name='departement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lignes_lots', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_ligneslot',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lignes_lots', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_lignepostebudgetaire',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_lignes_postes', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_lignepostebudgetaire',
            name='compte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_of_postbudgetaire', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_lignepostebudgetaire',
            name='poste_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ref_of_postbudgetaire', to='ErpBackOffice.Model_Poste_budgetaire'),
        ),
        migrations.AddField(
            model_name='model_lignepostebudgetaire',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_lignepaiementpret',
            name='pret',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiement_of_ligne_pret', to='ErpBackOffice.Model_Pret'),
        ),
        migrations.AddField(
            model_name='model_lignepaiementpret',
            name='rubrique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='RubriqueLignePaiement', to='ErpBackOffice.Model_Rubrique'),
        ),
        migrations.AddField(
            model_name='model_lignebudgetaire',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteu_ligne_budgetaire', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_lignebudgetaire',
            name='budget',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets_lignes_kg', to='ErpBackOffice.Model_Budget'),
        ),
        migrations.AddField(
            model_name='model_lignebudgetaire',
            name='centre_cout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centre_cout_of_ligne', to='ErpBackOffice.Model_Centre_cout'),
        ),
        migrations.AddField(
            model_name='model_lignebudgetaire',
            name='poste_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_fk', to='ErpBackOffice.Model_Poste_budgetaire'),
        ),
        migrations.AddField(
            model_name='model_lignebudgetaire',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_lignebudgetaire',
            name='unite_fonctionnelle',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='budgets', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_lignebilleterie',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_billeterie', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_lignebilleterie',
            name='billeterie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ligne_billeterie_of_operation_tresorerie', to='ErpBackOffice.Model_Billeterie'),
        ),
        migrations.AddField(
            model_name='model_lignebilleterie',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_transfert',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_transfert', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_transfert',
            name='bon_transfert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_of_bon_commande', to='ErpBackOffice.Model_Bon_transfert'),
        ),
        migrations.AddField(
            model_name='model_ligne_transfert',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_transfert',
            name='stock_article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_transfere_take_on_stock_article', to='ErpBackOffice.Model_StockArticle'),
        ),
        migrations.AddField(
            model_name='model_ligne_syndicat',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_ligne_syndicat_soo', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_syndicat',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_syndicat',
            name='syndicat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ligne_of_syndicat', to='ErpBackOffice.Model_Syndicat'),
        ),
        migrations.AddField(
            model_name='model_ligne_requete',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_ligne_requete_aae', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_requete',
            name='requete',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requete_fk_tzj', to='ErpBackOffice.Model_Requete'),
        ),
        migrations.AddField(
            model_name='model_ligne_releve',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_ligne_releve_qis', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_releve',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_reception',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_reception', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_reception',
            name='bon_reception',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ligne_of_reception', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_ligne_reception',
            name='ligne_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_budget_of_ligne', to='ErpBackOffice.Model_LigneBudgetaire'),
        ),
        migrations.AddField(
            model_name='model_ligne_reception',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_reception',
            name='stock_article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_of_reception', to='ErpBackOffice.Model_StockArticle'),
        ),
        migrations.AddField(
            model_name='model_ligne_reception',
            name='unite_achat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_UniteAchatArticle'),
        ),
        migrations.AddField(
            model_name='model_ligne_postulation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_postulation', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_postulation',
            name='recrutement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postulation_recrutementç_fk', to='ErpBackOffice.Model_Recrutement_interne'),
        ),
        migrations.AddField(
            model_name='model_ligne_postulation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_paiement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_ligne_ordre_paiement_dvq', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_paiement',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_fk_exs', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_paiement',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facture_fk_pjh', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_paiement',
            name='ordre_paiement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordre_paieemnt_id', to='ErpBackOffice.Model_Ordre_paiement'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_paiement',
            name='partenaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partenaire_dk_fk_pjh', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_paiement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_de_mission',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_fk_pbg', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_de_mission',
            name='ordre_mission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordre_mission_fk_chg', to='ErpBackOffice.Model_Ordre_de_mission'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_ligne_operation_transaction_wup', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_fk_wuk', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_operation_by_facture', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='lettrage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lettrage_ligne_operation_tresorerie', to='ErpBackOffice.Model_Lettrage'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='operation_tresorerie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operation_of_ligne', to='ErpBackOffice.Model_OperationTresorerie'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='paiement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiement_link_in_ligne', to='ErpBackOffice.Model_Paiement'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='partenaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partenaire_fk_gaq', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_operationtresorerie',
            name='taux',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taux_fk_dca', to='ErpBackOffice.Model_Taux'),
        ),
        migrations.AddField(
            model_name='model_ligne_inventaire',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_inventaire', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_inventaire',
            name='bon_inventaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_of_bon_inventaire', to='ErpBackOffice.Model_Bon_inventaire'),
        ),
        migrations.AddField(
            model_name='model_ligne_inventaire',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_inventaire',
            name='stock_article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_inventaire_take_on_stock_article', to='ErpBackOffice.Model_StockArticle'),
        ),
        migrations.AddField(
            model_name='model_ligne_immobilisation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_lignes_immo', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_immobilisation',
            name='immobilisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='immo_of_ammortissement', to='ErpBackOffice.Model_Immobilisation'),
        ),
        migrations.AddField(
            model_name='model_ligne_immobilisation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_formation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_ligne_formation_soo', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_formation',
            name='formation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ligne_of_formation', to='ErpBackOffice.Model_Formation'),
        ),
        migrations.AddField(
            model_name='model_ligne_formation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_facture',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_facture', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_facture',
            name='facture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ligne_of_facture', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_ligne_facture',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_facture',
            name='unite_achat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_UniteAchatArticle'),
        ),
        migrations.AddField(
            model_name='model_ligne_expression',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_expression', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_expression',
            name='expression',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ligne_of_expression', to='ErpBackOffice.Model_Expression'),
        ),
        migrations.AddField(
            model_name='model_ligne_expression',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_expression',
            name='unite_achat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_UniteAchatArticle'),
        ),
        migrations.AddField(
            model_name='model_ligne_demande_achat',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_demande', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_demande_achat',
            name='demande_achat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ligne_of_demande', to='ErpBackOffice.Model_Demande_achat'),
        ),
        migrations.AddField(
            model_name='model_ligne_demande_achat',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_demande_achat',
            name='unite_achat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_UniteAchatArticle'),
        ),
        migrations.AddField(
            model_name='model_ligne_competence',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_ligne_scompetence_soo', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_commande',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_ligne_commande', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ligne_commande',
            name='bon_commande',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_of_bon_commande', to='ErpBackOffice.Model_Bon_commande'),
        ),
        migrations.AddField(
            model_name='model_ligne_commande',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ligne_commande',
            name='stock_article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_commande_take_on_stock_article', to='ErpBackOffice.Model_StockArticle'),
        ),
        migrations.AddField(
            model_name='model_lettrage',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_lettrage_qef', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_lettrage',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_journal',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_journal', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_journal',
            name='compte_credit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_creditE_by_journal', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_journal',
            name='compte_debit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_debitE_by_journal', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_journal',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_of_journal', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_journal',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_itemstructuresalariale',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_structures_salaires', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_itemstructuresalariale',
            name='devise',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_structures_salaires', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_itemstructuresalariale',
            name='element',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_structures_salaires', to='ErpBackOffice.Model_ElementBulletin'),
        ),
        migrations.AddField(
            model_name='model_itemstructuresalariale',
            name='regle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_structures_salaires', to='ErpBackOffice.Model_RegleSalariale'),
        ),
        migrations.AddField(
            model_name='model_itemstructuresalariale',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_itemstructuresalariale',
            name='structure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_structures_salaires', to='ErpBackOffice.Model_StructureSalariale'),
        ),
        migrations.AddField(
            model_name='model_itemprofilpaye',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_profil_payes', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_itemprofilpaye',
            name='devise',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_profil_payes', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_itemprofilpaye',
            name='element',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_profil_payes', to='ErpBackOffice.Model_ElementBulletin'),
        ),
        migrations.AddField(
            model_name='model_itemprofilpaye',
            name='profil_paie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_profil_payes', to='ErpBackOffice.Model_ProfilPaye'),
        ),
        migrations.AddField(
            model_name='model_itemprofilpaye',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_itembulletin',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_bulletins', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_itembulletin',
            name='bulletin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_bulletins', to='ErpBackOffice.Model_Bulletin'),
        ),
        migrations.AddField(
            model_name='model_itembulletin',
            name='rubrique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Rubrique'),
        ),
        migrations.AddField(
            model_name='model_itembulletin',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_itembon',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_itembons', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_itembon',
            name='bon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itembons', to='ErpBackOffice.Model_Bon'),
        ),
        migrations.AddField(
            model_name='model_itembon',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='auteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='immobilisations', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='compte_depreciation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_depreciation', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='compte_dotation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_depense_dotation', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='compte_immobilier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_immobilisation', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='immobilisations_devise', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='immobilier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='immobilisations', to='ErpBackOffice.Model_Asset'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_immobilisation', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='local',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='local_keep_immobilisation', to='ErpBackOffice.Model_Local'),
        ),
        migrations.AddField(
            model_name='model_immobilisation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_immobilisation', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_image',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_images', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_image',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_groupepermissionutilisateur',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_groupe_permission_utilisateur', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_groupepermissionutilisateur',
            name='groupe_permission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groupe_permission', to='ErpBackOffice.Model_GroupePermission'),
        ),
        migrations.AddField(
            model_name='model_groupepermissionutilisateur',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_groupepermissionutilisateur',
            name='utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_groupepermission',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_groupe', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_groupepermission',
            name='permissions',
            field=models.ManyToManyField(blank=True, related_name='permission_related_to_a_group', to='ErpBackOffice.Model_Permission'),
        ),
        migrations.AddField(
            model_name='model_groupepermission',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_groupemenu',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_groupe_menu', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_groupemenu',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_of_groupemenu', to='ErpBackOffice.Model_Module'),
        ),
        migrations.AddField(
            model_name='model_groupeanalytique',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_groupeanalytique_ydk', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_groupeanalytique',
            name='groupe_analytique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groupe_analytique_fk_aes', to='ErpBackOffice.Model_GroupeAnalytique'),
        ),
        migrations.AddField(
            model_name='model_fournisseurarticle',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fournisseurs_article', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_fournisseurarticle',
            name='fournisseur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_fournisseurarticle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_formation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_formation_ydl', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_formation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_fonction',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_fonction', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_fonction',
            name='departement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fonctions', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_fonction',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures_creees', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='bon_commande',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures', to='ErpBackOffice.Model_Bon_commande'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='bon_reception',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='condition_reglement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures', to='ErpBackOffice.Model_ConditionReglement'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='etat_facturation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures', to='ErpBackOffice.Model_Etat_Facturation'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='facture_mere',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='factures_fille', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='journal_comptable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='lettrage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lettrage_link', to='ErpBackOffice.Model_Lettrage'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_facture', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='type_facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='type_facture', to='ErpBackOffice.Model_Typefacture'),
        ),
        migrations.AddField(
            model_name='model_expression',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_expression', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_expression',
            name='centre_cout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centre_cout_fk_expression', to='ErpBackOffice.Model_Centre_cout'),
        ),
        migrations.AddField(
            model_name='model_expression',
            name='ligne_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='budget_expression', to='ErpBackOffice.Model_LigneBudgetaire'),
        ),
        migrations.AddField(
            model_name='model_expression',
            name='services_ref',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services_refer', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_expression',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_exercicebudgetaire',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_exercicebudgetaire_jts', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_exercicebudgetaire',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_of_exercice_budgetaire', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_exercicebudgetaire',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_evenement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_evenements', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_evenement',
            name='local',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evenements', to='ErpBackOffice.Model_Local'),
        ),
        migrations.AddField(
            model_name='model_evenement',
            name='rappels',
            field=models.ManyToManyField(to='ErpBackOffice.Model_Alarme'),
        ),
        migrations.AddField(
            model_name='model_evenement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_evenement',
            name='type_evenement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evenements', to='ErpBackOffice.Model_TypeEvenement'),
        ),
        migrations.AddField(
            model_name='model_evaluation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_evaluation_umf', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_evaluation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_etat_facturation',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_etat_facturation', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_etat_facturation',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_etat_facturation', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_etat_facturation',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_etat_facturation', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_emploi',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_emploi_nnv', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_emploi',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_emplacement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_emplacement', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_emplacement',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_parent', to='ErpBackOffice.Model_Emplacement'),
        ),
        migrations.AddField(
            model_name='model_emplacement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_emplacement',
            name='type_emplacement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_type', to='ErpBackOffice.Model_TypeEmplacement'),
        ),
        migrations.AddField(
            model_name='model_elementbulletin',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='element_bulletins', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_elementbulletin',
            name='bareme',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='element_bulletins', to='ErpBackOffice.Model_Bareme'),
        ),
        migrations.AddField(
            model_name='model_elementbulletin',
            name='compte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_elementbulletin',
            name='devise',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='element_bulletins', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_elementbulletin',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ecriturecomptable',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_ecriture', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ecriturecomptable',
            name='compte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_of_ecriture', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_ecriturecomptable',
            name='lettrage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lettrage_ecriture_comptable', to='ErpBackOffice.Model_Lettrage'),
        ),
        migrations.AddField(
            model_name='model_ecriturecomptable',
            name='piece_comptable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='piece_comptable_of_ecriture', to='ErpBackOffice.Model_PieceComptable'),
        ),
        migrations.AddField(
            model_name='model_ecriturecomptable',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_ecriture_analytique',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_ecriture_analytique_mxc', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_ecriture_analytique',
            name='centre_cout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centre_cout_fk_mij', to='ErpBackOffice.Model_Centre_cout'),
        ),
        migrations.AddField(
            model_name='model_ecriture_analytique',
            name='compte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_fk_pbd', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_ecriture_analytique',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_of_ecritures_analytiques', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_ecriture_analytique',
            name='ecriture_comptable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ecriture_comptable_link', to='ErpBackOffice.Model_EcritureComptable'),
        ),
        migrations.AddField(
            model_name='model_ecriture_analytique',
            name='facture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facture_fk_uzy', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_ecriture_analytique',
            name='ligne_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ligne_of_ecriture_analytique', to='ErpBackOffice.Model_LigneBudgetaire'),
        ),
        migrations.AddField(
            model_name='model_ecriture_analytique',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_echelonrh',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_echelons_rh', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_echelonrh',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_droit',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_droit', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_droit',
            name='sous_module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rel_droit', to='ErpBackOffice.Model_SousModule'),
        ),
        migrations.AddField(
            model_name='model_droit',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_dossierpaie',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_periodepaie_vxu', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_dossierpaie',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_dossier_social',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_dossier_social', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_dossier',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_dossier_osx', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_dossier',
            name='dossier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dossier_fk_eja', to='ErpBackOffice.Model_Dossier'),
        ),
        migrations.AddField(
            model_name='model_dossier',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_document_oej', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='bon_entree',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_bons_entree', to='ErpBackOffice.Model_Bon'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='bon_reception',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_bons_receptions', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='bon_transfert',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_bons_transfert', to='ErpBackOffice.Model_Bon_transfert'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='demande_achat',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_demande', to='ErpBackOffice.Model_Demande_achat'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='dossier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dossier_fk_xjc', to='ErpBackOffice.Model_Dossier'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='etat_facturation',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_etat_facturation', to='ErpBackOffice.Model_Etat_Facturation'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='facture',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_factures', to='ErpBackOffice.Model_Facture'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='paiement',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_paiements', to='ErpBackOffice.Model_Paiement'),
        ),
        migrations.AddField(
            model_name='model_document',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_diplome',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_diplome', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_diplome',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_diplome',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Type_Diplome'),
        ),
        migrations.AddField(
            model_name='model_devise',
            name='auteur',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_devise',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_dependant',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_dependant', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_dependant',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_dependant', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_dependant',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_demande_achat',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_of_demande_achat', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_demande_achat',
            name='centre_cout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centre_cout_fk_demande', to='ErpBackOffice.Model_Centre_cout'),
        ),
        migrations.AddField(
            model_name='model_demande_achat',
            name='expression',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expression', to='ErpBackOffice.Model_Expression'),
        ),
        migrations.AddField(
            model_name='model_demande_achat',
            name='expressions',
            field=models.ManyToManyField(to='ErpBackOffice.Model_Expression'),
        ),
        migrations.AddField(
            model_name='model_demande_achat',
            name='services_ref',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services_ref', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_demande_achat',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_demande', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_constantetranche',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parametres_tranches', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_constantetranche',
            name='constante_parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parametres_tranches', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantetranche',
            name='tranche_debut_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debut_constantes_tranches', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantetranche',
            name='tranche_fin_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fin_constantes_tranches', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantetranche',
            name='valeur_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valeur_constantes_tranches', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantetest',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_parametres_tests', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_constantetest',
            name='code_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='code_constantes_tests', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantetest',
            name='constante_parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parametres_tests', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantetest',
            name='valeur_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valeur_constantes_tests', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantecalcul',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_parametres_calculs', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_constantecalcul',
            name='code_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantecalcul',
            name='constante_parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parametres_calculs', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constantecalcul',
            name='rubrique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parametres_calculs', to='ErpBackOffice.Model_Rubrique'),
        ),
        migrations.AddField(
            model_name='model_constante',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='constantes', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_constante',
            name='base_test_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_constantes', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constante',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='constantes', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_constante',
            name='rubrique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='constantes', to='ErpBackOffice.Model_Rubrique'),
        ),
        migrations.AddField(
            model_name='model_constante',
            name='sinon_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sinon_constantes', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_constante',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_constante',
            name='valeur_const',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valeur_constantes', to='ErpBackOffice.Model_Constante'),
        ),
        migrations.AddField(
            model_name='model_conge',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_conge_gts', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_conge',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_conge', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_conge',
            name='type_conge',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='type_conge_fk_sln', to='ErpBackOffice.Model_Type_conge'),
        ),
        migrations.AddField(
            model_name='model_conge',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_fk_apy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='model_config_payroll',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_config_payroll', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_config_payroll',
            name='organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_Organisation'),
        ),
        migrations.AddField(
            model_name='model_config_comptabilite',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_config_comptabilite', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_conditionreglement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confitions_reglement', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_conditionreglement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_condition_reglement',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_condition_reglement', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_condition_reglement',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_comptebanque_employe',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_compte_banque_employe', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_comptebanque_employe',
            name='banque',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banque_compte_banque_employe', to='ErpBackOffice.Model_Banque'),
        ),
        migrations.AddField(
            model_name='model_comptebanque_employe',
            name='profilrh',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profil_employe_compte_banciare', to='ErpBackOffice.Model_ProfilRH'),
        ),
        migrations.AddField(
            model_name='model_comptebanque_employe',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_comptebanque',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_banque_gkv', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_comptebanque',
            name='banque',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banque_of_compte', to='ErpBackOffice.Model_Banque'),
        ),
        migrations.AddField(
            model_name='model_comptebanque',
            name='compte_comptable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_of_this_banque', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_comptebanque',
            name='journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_of_this_banque', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_comptebanque',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_compte',
            name='auteur',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_compte',
            name='devise',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comptes_associes', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_compte',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_compte',
            name='type_compte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comptes_associes', to='ErpBackOffice.Model_TypeCompte'),
        ),
        migrations.AddField(
            model_name='model_classificationprofessionelle',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_classification', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_classificationprofessionelle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_civilite',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_civilite', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_centre_cout',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_centre_cout_kkt', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_centre_cout',
            name='centre_cout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centre_cout_fk_ffa', to='ErpBackOffice.Model_Centre_cout'),
        ),
        migrations.AddField(
            model_name='model_centre_cout',
            name='groupe_analytique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groupe_analytique_of_centre_cout', to='ErpBackOffice.Model_GroupeAnalytique'),
        ),
        migrations.AddField(
            model_name='model_centre_cout',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_categorierh',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_categories_rh', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_categorierh',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_categorieregle',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_categories_regles', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_categorieregle',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_categoriebudget',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_categoriebudget_zyd', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_categoriebudget',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_categorie_employe',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_categorie_employe_gbm', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_categorie_employe',
            name='categorie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categorie_rh_fk', to='ErpBackOffice.Model_CategorieRH'),
        ),
        migrations.AddField(
            model_name='model_categorie_employe',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_id_fk_mtj', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_categorie_employe',
            name='echelon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='echellon_rh_fk', to='ErpBackOffice.Model_EchelonRH'),
        ),
        migrations.AddField(
            model_name='model_categorie',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_categorie',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_capturecompte',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_capture_compte', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_capturecompte',
            name='compte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='captures', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_caisse',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_caisse_ayc', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_caisse',
            name='compte_comptable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compte_of_this_caisse', to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_caisse',
            name='journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_of_this_caisse', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_caisse',
            name='responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsable_fk_vji', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_caisse',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bulletinmodele',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_Bulletins_modeles', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bulletinmodele',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Bulletins_modeles', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_bulletinmodele',
            name='journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Bulletins_modeles', to='ErpBackOffice.Model_Journal'),
        ),
        migrations.AddField(
            model_name='model_bulletinmodele',
            name='rubriques',
            field=models.ManyToManyField(related_name='Bulletins_modeles', to='ErpBackOffice.Model_Rubrique'),
        ),
        migrations.AddField(
            model_name='model_bulletinmodele',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bulletinmodele',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Bulletins_modeles', to='ErpBackOffice.Model_TypeStructure'),
        ),
        migrations.AddField(
            model_name='model_bulletin',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_bulletins', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bulletin',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mes_bulletins', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bulletin',
            name='lot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lot_of_this_bulletins', to='ErpBackOffice.Model_LotBulletins'),
        ),
        migrations.AddField(
            model_name='model_bulletin',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_budget',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_budgets', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_budget',
            name='categoriebudget',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categoriebudget_fk_jkw', to='ErpBackOffice.Model_Categoriebudget'),
        ),
        migrations.AddField(
            model_name='model_budget',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devise_fk_jut', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_budget',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_transfert', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='demande_achat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demande_of_bon_transfert', to='ErpBackOffice.Model_Demande_achat'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='emplacement_destination',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tranferts', to='ErpBackOffice.Model_Emplacement'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='emplacement_origine',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='origin_transfert', to='ErpBackOffice.Model_Emplacement'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='expression',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expression_of_bon_transfert', to='ErpBackOffice.Model_Expression'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='operation_stock',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tranferts', to='ErpBackOffice.Model_OperationStock'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='services_ref',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services_referent_of_bt', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_bon_transfert', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_bon_reception', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='codes_budgetaires',
            field=models.ManyToManyField(related_name='demandes', to='ErpBackOffice.Model_LigneBudgetaire'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='condition_reglement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conditions_reglement', to='ErpBackOffice.Model_ConditionReglement'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='demande_achat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_demande_bon_reception', to='ErpBackOffice.Model_Demande_achat'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='demandes_achat',
            field=models.ManyToManyField(to='ErpBackOffice.Model_Demande_achat'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_receptions', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_bon_reception', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='ligne_budgetaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='budget_achat', to='ErpBackOffice.Model_LigneBudgetaire'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='receveur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receveur_bon_reception', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_bon_reception', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bon_livraison',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_bon_livraison', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bon_livraison',
            name='bon_commande',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_livraison_of_bon_commande', to='ErpBackOffice.Model_Bon_commande'),
        ),
        migrations.AddField(
            model_name='model_bon_livraison',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_of_bon_livraison', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_bon_livraison',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bon_inventaire',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_inventaire', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bon_inventaire',
            name='emplacement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_inventaire', to='ErpBackOffice.Model_Emplacement'),
        ),
        migrations.AddField(
            model_name='model_bon_inventaire',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bon_commande',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_bon_commande', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bon_commande',
            name='condition_reglement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conditions_reglement_commande', to='ErpBackOffice.Model_ConditionReglement'),
        ),
        migrations.AddField(
            model_name='model_bon_commande',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_commandes_devises', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_bon_commande',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_bon_commande', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_bon_commande',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_bon_commnde', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bon',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bons_auteurs', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bon',
            name='bon_commande',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bons_commande_of_bon', to='ErpBackOffice.Model_Bon_commande'),
        ),
        migrations.AddField(
            model_name='model_bon',
            name='bon_reception',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bons_reception_of_bon', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_bon',
            name='bon_transfert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bons_transfert_of_bon', to='ErpBackOffice.Model_Bon_transfert'),
        ),
        migrations.AddField(
            model_name='model_bon',
            name='devise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_bon',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_bon', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bon',
            name='taux',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Taux'),
        ),
        migrations.AddField(
            model_name='model_billeterie',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_billeterie', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_billeterie',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bareme',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='baremes', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_bareme',
            name='devise',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='baremes', to='ErpBackOffice.Model_Devise'),
        ),
        migrations.AddField(
            model_name='model_bareme',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_banque',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_bank_rfk', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_banque',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_avis_appel_offre',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_avis_appel_offre_cqe', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_avis_appel_offre',
            name='demande_achat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='avis_demande_bon_reception', to='ErpBackOffice.Model_Demande_achat'),
        ),
        migrations.AddField(
            model_name='model_avis_appel_offre',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statut_expression_avis_appel_offre', to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_assethistorique',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_asset_historiques', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_assethistorique',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='model_assethistorique',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_asset',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_asset_aid', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_asset',
            name='bon_entree',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_of_asset', to='ErpBackOffice.Model_Bon'),
        ),
        migrations.AddField(
            model_name='model_asset',
            name='bon_reception',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bon_reception_of_asset', to='ErpBackOffice.Model_Bon_reception'),
        ),
        migrations.AddField(
            model_name='model_asset',
            name='emplacement',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emplacement_asset', to='ErpBackOffice.Model_Emplacement'),
        ),
        migrations.AddField(
            model_name='model_asset',
            name='local',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='local_of_asset', to='ErpBackOffice.Model_Local'),
        ),
        migrations.AddField(
            model_name='model_asset',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='categorie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories_articles', to='ErpBackOffice.Model_Categorie'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='compte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Compte'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='unite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unites_articles', to='ErpBackOffice.Model_Unite'),
        ),
        migrations.AddField(
            model_name='model_article',
            name='unite_fonctionnelle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_of_unite_fonctionnelle', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_annee_fiscale',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_annee_fiscale_zty', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_annee_fiscale',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_analyse_personnel_mouve',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_analyses_personnels', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_analyse_personnel_mouve',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_analyse_indice_princsuivi',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_analyses', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_analyse_indice_princsuivi',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_alarme',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_alarmes', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_alarme',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_activite',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_de_model_activite_hgp', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_actionutilisateur',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_action_utilisation', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_actionutilisateur',
            name='permission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions', to='ErpBackOffice.Model_Permission'),
        ),
        migrations.AddField(
            model_name='model_actionutilisateur',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_actionsousmodule',
            name='action',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_ActionUtilisateur'),
        ),
        migrations.AddField(
            model_name='model_actionsousmodule',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur_action_sous_module', to='ErpBackOffice.Model_Personne'),
        ),
        migrations.AddField(
            model_name='model_actionsousmodule',
            name='sous_module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpBackOffice.Model_SousModule'),
        ),
        migrations.AddField(
            model_name='model_actionsousmodule',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_wkf_historique',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='workflow_utilisateurs', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_vehicule',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_oej', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_unite_fonctionnelle',
            name='responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsable_unite_fonctionnelle', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_temp_notification',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_fk_koy', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_syndicat',
            name='delegue_principal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delegue_principal_fk_tkq', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_syndicat',
            name='delegue_secondaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delegue_secondaire_fk_emk', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_requete_competence',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_asking_requete', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_requete',
            name='demandeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandeur_fk_imq', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_relancerecouvrement',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relances', to='ErpBackOffice.Model_Client'),
        ),
        migrations.AddField(
            model_name='model_relance',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients_relance', to='ErpBackOffice.Model_Client'),
        ),
        migrations.AddField(
            model_name='model_recouvrement',
            name='client',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recouvrements', to='ErpBackOffice.Model_Client'),
        ),
        migrations.AddField(
            model_name='model_projet_professionnel',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_dzv', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_profilrh',
            name='responsable_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsable', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_profilpaye',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profil_paie_of_employe', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_pret',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pret_of_employe', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_presence',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_zok', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_participant',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='participants', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ordre_de_mission',
            name='demandeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandeur_fk_imq_mission', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_mobilite',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employe_fk_nhg', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_message',
            name='destinataire',
            field=models.ManyToManyField(to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_message',
            name='expediteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expediteur_fk_ezk', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_lignebudgetaire',
            name='responsable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets_lignes', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ligne_syndicat',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_affilie_syndicat', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ligne_requete',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_pev', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ligne_releve',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_qqc', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ligne_releve',
            name='superieur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_qqcsuper', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ligne_postulation',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_postulation', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ligne_ordre_de_mission',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_kku', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ligne_formation',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_affilie_formation', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_ligne_competence',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_competence', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_fournisseur',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures_client', to='ErpBackOffice.Model_Client'),
        ),
        migrations.AddField(
            model_name='model_facture',
            name='fournisseur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures_fournisseur', to='ErpBackOffice.Model_Fournisseur'),
        ),
        migrations.AddField(
            model_name='model_expression',
            name='demandeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expressions', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_evenement',
            name='proprietaires',
            field=models.ManyToManyField(to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_evaluation',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employe_fk_evalg', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='categorie_employe',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categorie_empl', to='ErpBackOffice.Model_Categorie_employe'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='diplome',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diplome_employes', to='ErpBackOffice.Model_Diplome'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_employe', to='ErpBackOffice.Model_Document'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='modele_bulletin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employes', to='ErpBackOffice.Model_BulletinModele'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='poste',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poste_employe', to='ErpBackOffice.Model_Poste'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='profilrh',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profil_creees', to='ErpBackOffice.Model_ProfilRH'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='statutrh',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fk_statut_employes', to='ErpBackOffice.Model_StatusRH'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='type_structure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employes', to='ErpBackOffice.Model_TypeStructure'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='unite_fonctionnelle',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employes', to='ErpBackOffice.Model_Unite_fonctionnelle'),
        ),
        migrations.AddField(
            model_name='model_employe',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users_employes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='model_emploi',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employe_fk_whh', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_dossier_social',
            name='auteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dossier_social_auteur', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_dossier_social',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dossier_social_employe', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_dossier_social',
            name='responsable',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsable_employe', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_dependant',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependant_employe', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_demande_achat',
            name='demandeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandeurs', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_demande_achat',
            name='fournisseur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fournisseur_preparation_for_bon_commande', to='ErpBackOffice.Model_Fournisseur'),
        ),
        migrations.AddField(
            model_name='model_conge',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_mei', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_client',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ErpBackOffice.Model_Wkf_Etape'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_charge_du_transfert', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_doing_transfert', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_bon_transfert',
            name='responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandeur_doing_transfert', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_bon_reception',
            name='fournisseur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fournisseur_bon_reception', to='ErpBackOffice.Model_Fournisseur'),
        ),
        migrations.AddField(
            model_name='model_bon_inventaire',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_doing_inventaire', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_bon_commande',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_bon_reception', to='ErpBackOffice.Model_Client'),
        ),
        migrations.AddField(
            model_name='model_bon',
            name='inventoriste',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bons_inventoristes', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_assethistorique',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_asset_historiques', to='ErpBackOffice.Model_Employe'),
        ),
        migrations.AddField(
            model_name='model_asset',
            name='employe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_fk_fag', to='ErpBackOffice.Model_Employe'),
        ),
    ]
